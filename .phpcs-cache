{"config":{"phpVersion":70410,"phpExtensions":"42b0876545609cd03f840e2bb0edb8f7","tabWidth":4,"encoding":"utf-8","recordErrors":true,"annotations":true,"configData":{"installed_paths":"\/Users\/akihito\/.composer\/vendor\/doctrine\/coding-standard\/lib,\/Users\/akihito\/.composer\/vendor\/slevomat\/coding-standard"},"codeHash":"bfd1d80e7c3ff1a3e52895943f3244df","rulesetHash":"85849761a283b84bbcc67ebd9dab8b1f"},"\/Users\/akihito\/git\/Ray.Aop\/src\/Code.php":{"hash":"2328d46a716769e3a0dae61f99b7a7ba33188","errors":{"23":{"94":[{"message":"Constant PHP_EOL should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"28":{"9":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"29":{"21":[{"message":"Function str_replace() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"30":{"21":[{"message":"Function sprintf() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"31":{"20":[{"message":"Function tempnam() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"28":[{"message":"Function dirname() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"32":{"13":[{"message":"Function is_string() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"36":[{"message":"Function file_put_contents() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"80":[{"message":"Function rename() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"36":{"10":[{"message":"Function unlink() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"38":{"40":[{"message":"Function sprintf() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines after \"throw\", found 0.","source":"SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\JumpStatementsSpacingSniff","severity":5,"fixable":true}]},"13":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Code::$code with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"16":{"12":[{"message":"Property \\Ray\\Aop\\Code::$code does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"19":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"66":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"68":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function save()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"34":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":31,"81-120":3}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":14}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":1,"no":1}},"Function spacing after":{"values":{"1":1}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[3]},"Spacing after object operator":{"values":[3]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"PHP constant case":{"values":{"lower":1}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"CamelCase method name":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":1}},"Spaces after control structure open parenthesis":{"values":[1]},"Spaces before control structure close parenthesis":{"values":[1]},"Blank lines at start of control structure":{"values":[1]},"Blank lines at end of control structure":{"values":[1]},"Control structure defined inline":{"values":{"no":1}},"Inline comment style":{"values":{"\/\/ ...":2}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":22,"warningCount":0,"fixableCount":20,"numTokens":304},"\/Users\/akihito\/git\/Ray.Aop\/src\/Interceptor.php":{"hash":"459eedc5c8e7f419d496e9fb7ade409933188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11,"81-120":2}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":59},"\/Users\/akihito\/git\/Ray.Aop\/src\/WeavedInterface.php":{"hash":"84ede0a2f4ff6a99fb2e5679b4c46f0b33188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":27},"\/Users\/akihito\/git\/Ray.Aop\/src\/AopTemplate.php":{"hash":"467243c9da6debc38feabf272b5e2a4b33188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":53,"81-120":4}},"Line indent":{"values":{"spaces":8}},"PHP keyword case":{"values":{"lower":8}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Constant name case":{"values":{"upper":2}},"Inline comment style":{"values":{"\/* ... *\/":2}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":142},"\/Users\/akihito\/git\/Ray.Aop\/src\/Advice.php":{"hash":"c345a78d0c40e643f0842241bd5c287933188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":47},"\/Users\/akihito\/git\/Ray.Aop\/src\/MethodInvocation.php":{"hash":"96881399862cf356a2fa87c45485848433188","errors":{"26":{"33":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"35":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":22,"81-120":2}},"Line indent":{"values":{"spaces":8}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":2,"warningCount":0,"fixableCount":2,"numTokens":117},"\/Users\/akihito\/git\/Ray.Aop\/src\/CodeVisitor.php":{"hash":"7a03266af6629e4627fef419a1f5cfab33188","errors":{"18":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeVisitor::$namespace with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"21":{"12":[{"message":"Property \\Ray\\Aop\\CodeVisitor::$namespace does not have native type hint for its value but it should be possible to add it based on @var annotation \"Namespace_\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"23":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeVisitor::$declare with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"26":{"12":[{"message":"Property \\Ray\\Aop\\CodeVisitor::$declare does not have native type hint for its value but it should be possible to add it based on @var annotation \"Declare_[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"28":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeVisitor::$use with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"31":{"12":[{"message":"Property \\Ray\\Aop\\CodeVisitor::$use does not have native type hint for its value but it should be possible to add it based on @var annotation \"Use_[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"33":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeVisitor::$class with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"34":{"8":[{"message":"Null type hint should be on last position in \"null|Class_\".","source":"SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition.NullTypeHintNotOnLastPosition","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullTypeHintOnLastPositionSniff","severity":5,"fixable":true}]},"36":{"12":[{"message":"Property \\Ray\\Aop\\CodeVisitor::$class does not have native type hint for its value but it should be possible to add it based on @var annotation \"null|Class_\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"38":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeVisitor::$classMethod with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"41":{"12":[{"message":"Property \\Ray\\Aop\\CodeVisitor::$classMethod does not have native type hint for its value but it should be possible to add it based on @var annotation \"ClassMethod[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"43":{"12":[{"message":"Method \\Ray\\Aop\\CodeVisitor::enterNode() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function enterNode()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"45":{"9":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"54":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"50":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"55":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"64":{"51":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"53":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function validateClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"67":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"74":{"5":[{"message":"Doc comment for parameter \"$node\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"84":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"79":{"9":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"85":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":72,"81-120":1}},"Line indent":{"values":{"spaces":59}},"PHP keyword case":{"values":{"lower":45}},"Multiple statements on same line":{"values":{"no":30}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"CamelCase method name":{"values":{"yes":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":2,"yes":1}},"Function spacing after":{"values":{"1":2}},"Function spacing before":{"values":{"1":1}},"Spaces after control structure open parenthesis":{"values":[6]},"Spaces before control structure close parenthesis":{"values":[6]},"Blank lines at start of control structure":{"values":[6]},"Blank lines at end of control structure":{"values":[6]},"Control structure defined inline":{"values":{"no":6}},"Spacing before object operator":{"values":[11]},"Spacing after object operator":{"values":[11]},"PHP constant case":{"values":{"lower":5}},"PHP type case":{"values":{"lower":1}},"Function spacing after last":{"values":[1]}},"errorCount":27,"warningCount":0,"fixableCount":23,"numTokens":560},"\/Users\/akihito\/git\/Ray.Aop\/src\/Annotation\/AbstractAssisted.php":{"hash":"06e5610501f116a3acd70ef2c214fbfd33188","errors":{"11":{"10":[{"message":"Superfluous prefix \"Abstract\".","source":"SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousAbstractClassNamingSniff","severity":0,"fixable":false}]},"18":{"12":[{"message":"Property \\Ray\\Aop\\Annotation\\AbstractAssisted::$values does not have native type hint for its value but it should be possible to add it based on @var annotation \"string[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16}},"Line indent":{"values":{"spaces":6}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":2,"warningCount":0,"fixableCount":1,"numTokens":73},"\/Users\/akihito\/git\/Ray.Aop\/src\/BindInterface.php":{"hash":"2fc9b6a408dc1e8c26669b5c4d27b0c133188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]},"15":{"59":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"61":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"14":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"12":{"8":[{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"8":[{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"75":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"77":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Expected type hint \"array\"; found \"string\" for $interceptors","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"20":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $interceptors does not match actual variable name $method","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"12":[{"message":"Method \\Ray\\Aop\\BindInterface::getBindings() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"array<string, array<(MethodInterceptor|string)>>\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"40":{"12":[{"message":"Method \\Ray\\Aop\\BindInterface::toString() does not have native type hint for its parameter $salt but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Ray\\Aop\\BindInterface::toString() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Type hint \"string\" missing for $salt","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"36":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":34,"81-120":1}},"Line indent":{"values":{"spaces":29}},"PHP keyword case":{"values":{"lower":13}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"PHP type case":{"values":{"lower":2}},"Function has doc comment":{"values":{"yes":4}},"Function spacing after":{"values":{"1":3}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":19,"warningCount":0,"fixableCount":7,"numTokens":204},"\/Users\/akihito\/git\/Ray.Aop\/src\/ParserFactory.php":{"hash":"72952c24a0de1180daab140806f2697f33188","errors":{"12":{"35":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"37":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function newInstance()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":12}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":82},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/StartsWithMatcher.php":{"hash":"ce5bb396bd942d8e473f8d14a7f9008733188","errors":{"21":{"16":[{"message":"Function strpos() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"32":{"16":[{"message":"Function strpos() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"16":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"18":{"9":[{"message":"Missing variable $arguments before or after the documentation comment.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":0,"fixable":false}]},"27":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"26":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"9":[{"message":"Missing variable $arguments before or after the documentation comment.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":25,"81-120":2}},"Line indent":{"values":{"spaces":18}},"PHP keyword case":{"values":{"lower":14}},"Multiple statements on same line":{"values":{"no":9}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Function spacing after last":{"values":[1]}},"errorCount":14,"warningCount":0,"fixableCount":6,"numTokens":206},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/AnnotatedWithMatcher.php":{"hash":"8b60050bfed0f72f250a1565369bc6e533188","errors":{"20":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Matcher\\AnnotatedWithMatcher::$reader with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"13":[{"message":"Property \\Ray\\Aop\\Matcher\\AnnotatedWithMatcher::$reader does not have native type hint for its value but it should be possible to add it based on @var annotation \"AnnotationReader\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"reader\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"31":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"30":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"28":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"9":[{"message":"Missing variable $arguments before or after the documentation comment.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":0,"fixable":false}]},"35":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"37":{"28":[{"message":"Useless ternary operator.","source":"SlevomatCodingStandard.ControlStructures.UselessTernaryOperator.UselessTernaryOperator","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\UselessTernaryOperatorSniff","severity":5,"fixable":false}]},"43":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"42":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"45":{"9":[{"message":"Missing variable $arguments before or after the documentation comment.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":0,"fixable":false}]},"47":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"49":{"28":[{"message":"Useless ternary operator.","source":"SlevomatCodingStandard.ControlStructures.UselessTernaryOperator.UselessTernaryOperator","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\UselessTernaryOperatorSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":40,"81-120":2}},"Line indent":{"values":{"spaces":32}},"PHP keyword case":{"values":{"lower":20}},"Multiple statements on same line":{"values":{"no":15}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[6]},"Spacing after object operator":{"values":[6]},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Adjacent assignments aligned":{"values":{"no":2}},"PHP constant case":{"values":{"lower":4}},"Function spacing after last":{"values":[1]}},"errorCount":21,"warningCount":0,"fixableCount":9,"numTokens":316},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/LogicalNotMatcher.php":{"hash":"8674bf6b8d862350f098e72ada83d3e933188","errors":{"19":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"30":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"16":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"18":{"9":[{"message":"list(...) is forbidden, use [...] instead.","source":"SlevomatCodingStandard.PHP.ShortList.LongListUsed","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\ShortListSniff","severity":5,"fixable":true}]},"27":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"26":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"9":[{"message":"list(...) is forbidden, use [...] instead.","source":"SlevomatCodingStandard.PHP.ShortList.LongListUsed","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\ShortListSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":25,"81-120":2}},"Line indent":{"values":{"spaces":18}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":11}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[3]},"Spacing after object operator":{"values":[3]},"Function spacing after last":{"values":[1]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}}},"errorCount":14,"warningCount":0,"fixableCount":8,"numTokens":216},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/LogicalAndMatcher.php":{"hash":"62893875ffdebfe754fda701307d46a333188","errors":{"20":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"34":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"16":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"30":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"29":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"27":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":29,"81-120":4}},"Line indent":{"values":{"spaces":24}},"PHP keyword case":{"values":{"lower":20}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"PHP constant case":{"values":{"lower":2}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"Spacing before object operator":{"values":[4]},"Spacing after object operator":{"values":[4]},"Function spacing after last":{"values":[1]}},"errorCount":14,"warningCount":0,"fixableCount":8,"numTokens":264},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/LogicalOrMatcher.php":{"hash":"418e9690966bcdb74e9194f12de222b433188","errors":{"19":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"35":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"16":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"13":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"32":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"31":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"13":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":34,"81-120":3}},"Line indent":{"values":{"spaces":28}},"PHP keyword case":{"values":{"lower":24}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Spaces after control structure open parenthesis":{"values":[4]},"Spaces before control structure close parenthesis":{"values":[4]},"Blank lines at start of control structure":{"values":[4]},"Blank lines at end of control structure":{"values":[4]},"Control structure defined inline":{"values":{"no":4}},"Spacing before object operator":{"values":[4]},"Spacing after object operator":{"values":[4]},"PHP constant case":{"values":{"lower":6}},"Function spacing after last":{"values":[1]}},"errorCount":14,"warningCount":0,"fixableCount":8,"numTokens":284},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/AnyMatcher.php":{"hash":"36c8c315ba7c4b3416779188e873b09333188","errors":{"57":{"16":[{"message":"Function strpos() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"62":{"16":[{"message":"Function in_array() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Matcher\\AnyMatcher::$builtinMethods with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"20":[{"message":"Property \\Ray\\Aop\\Matcher\\AnyMatcher::$builtinMethods does not have native type hint for its value but it should be possible to add it based on @var annotation \"string[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"builtinMethods\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"19":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"30":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"29":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"27":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"39":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"47":{"42":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"44":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function setBuildInMethods()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"50":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"55":{"50":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"52":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function isMagicMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"60":{"52":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"54":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function isBuiltinMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":49,"81-120":3}},"Line indent":{"values":{"spaces":42}},"PHP keyword case":{"values":{"lower":37}},"Multiple statements on same line":{"values":{"no":17}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"no":4,"yes":2}},"Function spacing after":{"values":{"1":5}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[12]},"Spacing after object operator":{"values":[12]},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"CamelCase method name":{"values":{"yes":5}},"PHP type case":{"values":{"lower":5}},"PHP constant case":{"values":{"lower":2}},"Function spacing after last":{"values":[1]}},"errorCount":28,"warningCount":0,"fixableCount":17,"numTokens":418},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher\/SubclassesOfMatcher.php":{"hash":"304fab4d8e75a9121391f216b2ae50bc33188","errors":{"17":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"16":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"9":[{"message":"Missing variable $arguments before or after the documentation comment.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":0,"fixable":false}]},"28":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"27":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":23,"81-120":4}},"Line indent":{"values":{"spaces":17}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":10}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Function spacing after last":{"values":[1]}},"errorCount":11,"warningCount":0,"fixableCount":4,"numTokens":207},"\/Users\/akihito\/git\/Ray.Aop\/src\/Reader.php":{"hash":"acebdc2fa7a198563e1b25af7bf3cece33188","errors":{"14":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"21":{"8":[{"message":"Null type hint should be on last position in \"null|object\".","source":"SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition.NullTypeHintNotOnLastPosition","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullTypeHintOnLastPositionSniff","severity":5,"fixable":true}]},"23":{"12":[{"message":"Method \\Ray\\Aop\\Reader::getAnnotation() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"null|object\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"19":{"8":[{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":19,"81-120":1}},"Line indent":{"values":{"spaces":14}},"PHP keyword case":{"values":{"lower":7}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":6,"warningCount":0,"fixableCount":4,"numTokens":107},"\/Users\/akihito\/git\/Ray.Aop\/src\/CodeGenInterface.php":{"hash":"1896348458625d471751f0381594c14233188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]},"14":{"81":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"83":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $sourceClass","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"12":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"11":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":7,"warningCount":0,"fixableCount":2,"numTokens":68},"\/Users\/akihito\/git\/Ray.Aop\/src\/AnnotatedMatcher.php":{"hash":"8eb965eee6a459439ebecc15a378597d33188","errors":{"9":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\AnnotatedMatcher::$annotation with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"12":{"12":[{"message":"Property \\Ray\\Aop\\AnnotatedMatcher::$annotation does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"15":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $arguments does not match actual variable name $matcherName","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"12":[{"message":"Expected type hint \"array\"; found \"string\" for $arguments","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"5":[{"message":"Doc comment for parameter \"$matcherName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":18}},"Line indent":{"values":{"spaces":12}},"PHP keyword case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":6,"warningCount":0,"fixableCount":2,"numTokens":114},"\/Users\/akihito\/git\/Ray.Aop\/src\/CompilerInterface.php":{"hash":"55a755ad87274e4fd6205d84a5764d0b33188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]},"14":{"65":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"67":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"13":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"12":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"9":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"12":[{"message":"Method \\Ray\\Aop\\CompilerInterface::newInstance() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"object\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"19":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"20":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"16":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":20,"81-120":1}},"Line indent":{"values":{"spaces":15}},"PHP keyword case":{"values":{"lower":7}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":10,"warningCount":0,"fixableCount":3,"numTokens":132},"\/Users\/akihito\/git\/Ray.Aop\/src\/CodeGenMethod.php":{"hash":"7c1c137e2424759c9ce1f5890fb1445a33188","errors":{"43":{"27":[{"message":"Function array_keys() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"48":{"32":[{"message":"Function in_array() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"70":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"72":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"74":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"18":{"8":[{"message":"Class \\PhpParser\\Parser should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"23":{"8":[{"message":"Class \\PhpParser\\BuilderFactory should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"28":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"13":[{"message":"Class CodeGenMethod contains write-only property $factory.","source":"SlevomatCodingStandard.Classes.UnusedPrivateElements.WriteOnlyProperty","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\UnusedPrivateElementsSniff","severity":5,"fixable":false},{"message":"Property \\Ray\\Aop\\CodeGenMethod::$factory does not have native type hint for its value but it should be possible to add it based on @var annotation \"\\PhpParser\\BuilderFactory\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"factory\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"17":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGenMethod::$parser with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"20":{"13":[{"message":"Property \\Ray\\Aop\\CodeGenMethod::$parser does not have native type hint for its value but it should be possible to add it based on @var annotation \"\\PhpParser\\Parser\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"parser\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"22":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGenMethod::$factory with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"27":{"5":[{"message":"Doc comment for parameter \"$parser\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$factory\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"34":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"41":{"72":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"74":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"38":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$code\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"44":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"45":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"46":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"47":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"49":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"50":{"13":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"56":{"28":[{"message":"Equals sign not aligned with surrounding assignments; expected 10 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"66":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"63":{"5":[{"message":"Doc comment for parameter \"$returnType\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"68":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"79":{"62":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"64":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function isReturnVoid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":69,"81-120":3}},"Line indent":{"values":{"spaces":59}},"PHP keyword case":{"values":{"lower":30}},"Multiple statements on same line":{"values":{"no":32}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":3,"no":1}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[20]},"Spacing after object operator":{"values":[20]},"Adjacent assignments aligned":{"values":{"no":5}},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"PHP constant case":{"values":{"lower":2}},"Inline comment style":{"values":{"\/\/ ...":1}},"Function spacing after last":{"values":[1]}},"errorCount":38,"warningCount":0,"fixableCount":28,"numTokens":586},"\/Users\/akihito\/git\/Ray.Aop\/src\/PriorityPointcut.php":{"hash":"27a8aba8f4fe05936c0c480ec76efe8633188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":33},"\/Users\/akihito\/git\/Ray.Aop\/src\/AbstractMatcher.php":{"hash":"aaf4b296e7da0c2a1031180c743a98f733188","errors":{"19":{"28":[{"message":"Function func_get_args() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"10":{"10":[{"message":"Superfluous prefix \"Abstract\".","source":"SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousAbstractClassNamingSniff","severity":0,"fixable":false}]},"12":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\AbstractMatcher::$arguments with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"15":{"15":[{"message":"Property \\Ray\\Aop\\AbstractMatcher::$arguments does not have native type hint for its value but it should be possible to add it based on @var annotation \"mixed[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"17":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"21":[{"message":"Method \\Ray\\Aop\\AbstractMatcher::matchesClass() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"28":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"25":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"39":{"21":[{"message":"Method \\Ray\\Aop\\AbstractMatcher::matchesMethod() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"bool\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Expected type hint \"array\"; found \"ReflectionMethod\" for $arguments","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"8":[{"message":"Expected \"boolean\" but found \"bool\" for function return type","source":"Squiz.Commenting.FunctionComment.InvalidReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"35":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $arguments does not match actual variable name $method","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"46":{"12":[{"message":"Method \\Ray\\Aop\\AbstractMatcher::getArguments() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"mixed[]\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":40,"81-120":2}},"Line indent":{"values":{"spaces":34}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":9}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":1,"yes":3}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":2}},"Function spacing after last":{"values":[1]}},"errorCount":17,"warningCount":0,"fixableCount":8,"numTokens":248},"\/Users\/akihito\/git\/Ray.Aop\/src\/Bind.php":{"hash":"87ec269f80ab719796caa46b19d9809c33188","errors":{"54":{"38":[{"message":"Function array_key_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"99":[{"message":"Function array_merge() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"77":{"16":[{"message":"Function serialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"22":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"11":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Bind::$bindings with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"14":{"13":[{"message":"Property \\Ray\\Aop\\Bind::$bindings does not have native type hint for its value but it should be possible to add it based on @var annotation \"array<string, array<MethodInterceptor>>\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"bindings\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"16":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Bind::$methodMatch with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"19":{"13":[{"message":"Property \\Ray\\Aop\\Bind::$methodMatch does not have native type hint for its value but it should be possible to add it based on @var annotation \"MethodMatch\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"methodMatch\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"29":{"12":[{"message":"Method \\Ray\\Aop\\Bind::__sleep() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function __sleep()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"59":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"61":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"36":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"34":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$pointcuts\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"41":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"42":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"52":{"75":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"77":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"51":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$interceptors\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"65":{"35":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"37":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"64":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"73":{"37":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"39":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"72":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"70":{"5":[{"message":"Doc comment for parameter \"$salt\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"85":{"63":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"65":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"81":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"88":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"91":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"89":{"13":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":79,"81-120":2}},"Line indent":{"values":{"spaces":74}},"PHP keyword case":{"values":{"lower":37}},"Multiple statements on same line":{"values":{"no":21}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":6,"no":1}},"Function spacing after":{"values":{"1":6}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[13]},"Spacing after object operator":{"values":[13]},"CamelCase method name":{"values":{"yes":5}},"PHP type case":{"values":{"lower":5}},"Adjacent assignments aligned":{"values":{"no":1}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Function spacing after last":{"values":[1]}},"errorCount":39,"warningCount":0,"fixableCount":24,"numTokens":578},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/InvalidSourceClassException.php":{"hash":"8b47a37969e14725593c373404dba88933188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6,"81-120":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/InvalidMatcherException.php":{"hash":"6b34aab8d7c30eae6367cfdbe3e90aca33188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6,"81-120":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/ExceptionInterface.php":{"hash":"c5ef4ac9afcec2de15a428cf78e8761833188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":29},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/NotWritableException.php":{"hash":"a299734e38097885accdbe544b8e345033188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":7}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/InvalidArgumentException.php":{"hash":"0dc89fda416d777f9e20dd7cf88e0e1b33188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":5,"81-120":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":38},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/InvalidAnnotationException.php":{"hash":"78fdc5384a5a1ca42f8f074886de088133188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6,"81-120":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/akihito\/git\/Ray.Aop\/src\/Exception\/MultipleClassInOneFileException.php":{"hash":"aed81a788f9113775688af618ba77a2333188","errors":{"9":{"1":[{"message":"Superfluous suffix \"Exception\".","source":"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousExceptionNamingSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6,"81-120":1}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":1,"warningCount":0,"fixableCount":0,"numTokens":43},"\/Users\/akihito\/git\/Ray.Aop\/src\/ReflectionMethod.php":{"hash":"fd7a7285a939fdb7a575b7f2a4104efe33188","errors":{"7":{"26":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"8":{"1":[{"message":"The class-based use imports must follow the namespace declaration in the file header","source":"PSR12.Files.FileHeader.IncorrectOrder","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is Doctrine\\Common\\Annotations\\AnnotationReader.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"33":{"15":[{"message":"Function is_object() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"34":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"39":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"41":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"56":{"54":[{"message":"Function is_string() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"57":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"64":{"24":[{"message":"Function unserialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"65":{"13":[{"message":"Function array_key_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"12":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectionMethod::$object with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"15":{"13":[{"message":"Property \\Ray\\Aop\\ReflectionMethod::$object does not have native type hint for its value but it should be possible to add it based on @var annotation \"WeavedInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"object\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"17":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectionMethod::$method with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"20":{"13":[{"message":"Property \\Ray\\Aop\\ReflectionMethod::$method does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"method\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"25":{"83":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"85":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"24":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"5":[{"message":"Doc comment for parameter \"$object\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function getDeclaringClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"53":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"52":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"62":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"59":{"29":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"74":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"5":[{"message":"Doc comment for parameter \"$annotationName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"78":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":{"59":{"122":[{"message":"Line exceeds 120 characters; contains 122 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":68,"81-120":3,"121-150":1}},"Line indent":{"values":{"spaces":64}},"PHP keyword case":{"values":{"lower":39}},"Multiple statements on same line":{"values":{"no":27}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":3,"no":1}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[22]},"Spacing after object operator":{"values":[22]},"Adjacent assignments aligned":{"values":{"yes":1}},"Spaces after control structure open parenthesis":{"values":[5]},"Spaces before control structure close parenthesis":{"values":[5]},"Blank lines at start of control structure":{"values":[5]},"Blank lines at end of control structure":{"values":[5]},"Control structure defined inline":{"values":{"no":5}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"PHP constant case":{"values":{"lower":2}},"Function spacing after last":{"values":[1]}},"errorCount":39,"warningCount":1,"fixableCount":29,"numTokens":606},"\/Users\/akihito\/git\/Ray.Aop\/src\/ReflectionClass.php":{"hash":"50e31f92d3eeadb2aa1dd79fb56387cc33188","errors":{"35":{"49":[{"message":"Function is_string() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"37":{"28":[{"message":"Function unserialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectionClass::$object with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"15":{"8":[{"message":"Null type hint should be on last position in \"null|WeavedInterface\".","source":"SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition.NullTypeHintNotOnLastPosition","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullTypeHintOnLastPositionSniff","severity":5,"fixable":true}]},"17":{"13":[{"message":"Property \\Ray\\Aop\\ReflectionClass::$object does not have native type hint for its value but it should be possible to add it based on @var annotation \"null|WeavedInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"object\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"22":{"56":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"58":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"21":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"5":[{"message":"Doc comment for parameter \"$object\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"31":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"42":{"25":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"49":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"47":{"5":[{"message":"Doc comment for parameter \"$annotationName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"53":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":48,"81-120":3}},"Line indent":{"values":{"spaces":41}},"PHP keyword case":{"values":{"lower":25}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[8]},"Spacing after object operator":{"values":[8]},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"PHP constant case":{"values":{"lower":2}},"Function spacing after last":{"values":[1]}},"errorCount":20,"warningCount":0,"fixableCount":14,"numTokens":364},"\/Users\/akihito\/git\/Ray.Aop\/tests\/bootstrap.php":{"hash":"e33a278fae8dbcc724d984ae9aabde6533188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":4}},"PHP keyword case":{"values":{"lower":2}},"Multiple statements on same line":{"values":{"no":3}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}},"PHP type case":{"values":{"lower":1}},"Spacing after cast statement":{"values":{"1":1}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":41},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/SubclassesOfMatcherTest.php":{"hash":"7a8881eec7379c517d6199324f5527ed33188","errors":{"24":{"32":[{"message":"Class \\Ray\\Aop\\Exception\\InvalidAnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"14":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"16":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"17":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"22":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"27":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":21,"81-120":2}},"Line indent":{"values":{"spaces":13}},"PHP keyword case":{"values":{"lower":16}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":2}},"Spacing before object operator":{"values":[9]},"Spacing after object operator":{"values":[9]},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":11,"warningCount":0,"fixableCount":9,"numTokens":219},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/StartsWithMatcherTest.php":{"hash":"db7cef0aae6fcac48f158d167ecc01f733188","errors":{"14":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"16":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"17":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"22":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"25":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"30":{"49":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"51":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethodNotMatch()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"33":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":28}},"Line indent":{"values":{"spaces":18}},"PHP keyword case":{"values":{"lower":20}},"Multiple statements on same line":{"values":{"no":15}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":3}},"Spacing before object operator":{"values":[9]},"Spacing after object operator":{"values":[9]},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Function spacing after last":{"values":[1]}},"errorCount":15,"warningCount":0,"fixableCount":12,"numTokens":268},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/LogicalNotMatcherTest.php":{"hash":"78c6f52281eb8fd3a41d0a0c06a97e2333188","errors":{"15":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"18":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"22":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClassFalse()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"25":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"69":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"29":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"32":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"71":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":26,"81-120":3}},"Line indent":{"values":{"spaces":18}},"PHP keyword case":{"values":{"lower":24}},"Multiple statements on same line":{"values":{"no":16}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":3}},"Spacing before object operator":{"values":[9]},"Spacing after object operator":{"values":[9]},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"PHP constant case":{"values":{"lower":1}},"Function spacing after last":{"values":[1]}},"errorCount":17,"warningCount":0,"fixableCount":14,"numTokens":280},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/LogicalOrMatcherTest.php":{"hash":"109f551d79d008fdf3ebb8ae0c736d1333188","errors":{"15":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"18":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"68":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"23":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClassFalse()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"26":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"68":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"31":{"55":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"57":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClassThreeConditions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"34":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"116":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"38":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testLogicalOrNotMatch()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"41":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"45":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"47":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"48":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"70":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"87":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"53":{"46":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"48":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethodFalse()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"55":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"56":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"61":{"57":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"59":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethodMoreThanTwoMatch()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"63":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"64":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":{"34":{"133":[{"message":"Line exceeds 120 characters; contains 133 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"41":{"158":[{"message":"Line exceeds 120 characters; contains 158 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"64":{"165":[{"message":"Line exceeds 120 characters; contains 165 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":46,"81-120":4,"121-150":1,"151 or more":2}},"Line indent":{"values":{"spaces":42}},"PHP keyword case":{"values":{"lower":55}},"Multiple statements on same line":{"values":{"no":28}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":7}},"PHP type case":{"values":{"lower":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"no":7}},"Function spacing after":{"values":{"1":6}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":7}},"Spacing before object operator":{"values":[21]},"Spacing after object operator":{"values":[21]},"Short array syntax used":{"values":{"yes":7}},"Array end comma":{"values":{"no":7}},"PHP constant case":{"values":{"lower":16}},"Function spacing after last":{"values":[1]}},"errorCount":40,"warningCount":3,"fixableCount":33,"numTokens":663},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/InvalidMatcher.php":{"hash":"b432889f6a0ab186151039dd303bde6d33188","errors":[],"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":0,"warningCount":0,"fixableCount":0,"numTokens":29},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/AnyMatcherTest.php":{"hash":"70e224a2c7ff38a3c4e3b83e2403939533188","errors":{"15":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"18":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"23":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"26":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":22,"81-120":1}},"Line indent":{"values":{"spaces":12}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":2}},"Spacing before object operator":{"values":[7]},"Spacing after object operator":{"values":[7]},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":10,"warningCount":0,"fixableCount":8,"numTokens":208},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/LogicalAndMatcherTest.php":{"hash":"5d4b8b704cc72df7885bdc3394f15ebe33188","errors":{"15":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"18":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"23":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClassFalse()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"26":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"31":{"55":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"57":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClassThreeConditions()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"34":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"39":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"42":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":{"18":{"127":[{"message":"Line exceeds 120 characters; contains 127 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"26":{"128":[{"message":"Line exceeds 120 characters; contains 128 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"34":{"157":[{"message":"Line exceeds 120 characters; contains 157 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"42":{"129":[{"message":"Line exceeds 120 characters; contains 129 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":31,"121-150":3,"151 or more":1}},"Line indent":{"values":{"spaces":24}},"PHP keyword case":{"values":{"lower":34}},"Multiple statements on same line":{"values":{"no":19}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"PHP type case":{"values":{"lower":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"no":4}},"Function spacing after":{"values":{"1":3}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":4}},"Spacing before object operator":{"values":[12]},"Spacing after object operator":{"values":[12]},"Short array syntax used":{"values":{"yes":4}},"Array end comma":{"values":{"no":4}},"PHP constant case":{"values":{"lower":18}},"Function spacing after last":{"values":[1]}},"errorCount":20,"warningCount":4,"fixableCount":16,"numTokens":428},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Matcher\/AnnotatedWithMatcherTest.php":{"hash":"898ab23ceca288216c669ec42e1f8f9c33188","errors":{"16":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"18":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"19":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"24":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"27":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":22,"81-120":2}},"Line indent":{"values":{"spaces":12}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":14}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":2}},"Spacing before object operator":{"values":[8]},"Spacing after object operator":{"values":[8]},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":10,"warningCount":0,"fixableCount":8,"numTokens":222},"\/Users\/akihito\/git\/Ray.Aop\/tests\/ParserFactoryTest.php":{"hash":"27c609455237e57c588df48d33950d4833188","errors":{"11":{"34":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"36":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testCreate()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"54":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10,"81-120":1}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":8}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":80},"\/Users\/akihito\/git\/Ray.Aop\/tests\/script\/compile.php":{"hash":"4b8591d3e0c0166eee01ba3006359c9f33188","errors":{"7":{"19":[{"message":"Function dirname() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"8":{"31":[{"message":"Function dirname() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"10":{"11":[{"message":"Function dirname() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"12":{"7":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"9":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"14":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"16":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"19":{"1":[{"message":"Useless variable $class.","source":"SlevomatCodingStandard.Variables.UselessVariable.UselessVariable","listener":"SlevomatCodingStandard\\Sniffs\\Variables\\UselessVariableSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16}},"Line indent":{"values":{"spaces":3}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":11}},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}},"Spacing before object operator":{"values":[7]},"Spacing after object operator":{"values":[7]},"Adjacent assignments aligned":{"values":{"no":1}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}}},"errorCount":10,"warningCount":0,"fixableCount":10,"numTokens":173},"\/Users\/akihito\/git\/Ray.Aop\/tests\/script\/weave.php":{"hash":"e3d2d53db929dbe411ddae9bedf0b7d333188","errors":{"17":{"7":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"10":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"13":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"14":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"15":{"6":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16}},"Line indent":{"values":{"spaces":3}},"PHP keyword case":{"values":{"lower":11}},"Multiple statements on same line":{"values":{"no":11}},"Spacing before string concat":{"values":{"1":3}},"Spacing after string concat":{"values":{"1":3}},"Spacing before object operator":{"values":[7]},"Spacing after object operator":{"values":[7]},"Adjacent assignments aligned":{"values":{"no":1}},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}}},"errorCount":5,"warningCount":0,"fixableCount":5,"numTokens":169},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeDoubleInterceptor.php":{"hash":"d3a34664139980ecb406e1b2142d8f5133188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeDoubleInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"Line indent":{"values":{"spaces":5}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":62},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeAssistedConsumer.php":{"hash":"c8a1477a2f0f8e6c45a047ea8bfbfdec33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"20":{"12":[{"message":"Method \\Ray\\Aop\\FakeAssistedConsumer::run() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAssistedConsumer::run() does not have parameter type hint nor @param annotation for its parameter $b.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAssistedConsumer::run() does not have parameter type hint nor @param annotation for its parameter $c.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAssistedConsumer::run() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"19":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$b\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$c\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"16":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":22}},"Line indent":{"values":{"spaces":10}},"PHP keyword case":{"values":{"lower":8}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}}},"errorCount":12,"warningCount":0,"fixableCount":4,"numTokens":130},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakePhp7Class.php":{"hash":"522fdb1f294f3729bffbc6ddb198305133188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"10":{"63":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"65":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakePhp7Class::run() does not have @return annotation for its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function run()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"12":{"16":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":13}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}}},"errorCount":8,"warningCount":0,"fixableCount":6,"numTokens":86},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeOnionInterceptor4.php":{"hash":"49099b4aa1fa9a78e92826e7291f558933188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeOnionInterceptor4::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":49},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/Annotation\/FakeClassMarker.php":{"hash":"f0ef7a1765dbc651bd35d84c96e53d6133188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":36},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/Annotation\/FakeMarker.php":{"hash":"4af68fd91001dfdd8bcb748ebc54728e33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"10":{"12":[{"message":"Property \\Ray\\Aop\\Annotation\\FakeMarker::$value does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":42},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/Annotation\/FakeMarker3.php":{"hash":"1043505de1aea55c2dcfd067b75fcfad33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":36},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/Annotation\/FakeMarker2.php":{"hash":"96c7ec1f602d5220b64f0b2dd384385033188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":36},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeOnionInterceptor2.php":{"hash":"7bc1a926a8e72bf8dc9febfb331fbae933188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeOnionInterceptor2::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":49},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeGlobalNamespaced.php":{"hash":"7b89b100b8803490bc3d2fc461bab80b33188","errors":{"3":{"1":[{"message":"Type Ray\\Aop\\FakeNum is not used in this file.","source":"SlevomatCodingStandard.Namespaces.UnusedUses.UnusedUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UnusedUsesSniff","severity":5,"fixable":true}]},"1":{"1":[{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"6":{"1":[{"message":"Each class must be in a namespace of at least one level (a top-level vendor name)","source":"PSR1.Classes.ClassDeclaration.MissingNamespace","listener":"PHP_CodeSniffer\\Standards\\PSR1\\Sniffs\\Classes\\ClassDeclarationSniff","severity":5,"fixable":false}]},"11":{"12":[{"message":"Method \\FakeGlobalNamespaced::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\FakeGlobalNamespaced::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"10":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"8":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":13}},"Line indent":{"values":{"spaces":7}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"no":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":7,"warningCount":0,"fixableCount":2,"numTokens":58},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeAnnotateClassNoName.php":{"hash":"d5e0d7cf1b9fecf2a907dea02ec2abb633188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"13":{"12":[{"message":"Property \\Ray\\Aop\\FakeAnnotateClassNoName::$a does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"20":{"12":[{"message":"Method \\Ray\\Aop\\FakeAnnotateClassNoName::getDouble() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAnnotateClassNoName::getDouble() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"19":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"15":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"12":[{"message":"Method \\Ray\\Aop\\FakeAnnotateClassNoName::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAnnotateClassNoName::returnSame() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function returnSame()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":24}},"Line indent":{"values":{"spaces":13}},"PHP keyword case":{"values":{"lower":11}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"yes":1,"no":1}},"Function spacing after":{"values":{"1":1}},"Function spacing before":{"values":{"1":1}},"Function spacing after last":{"values":[1]}},"errorCount":11,"warningCount":0,"fixableCount":4,"numTokens":136},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakePhp71NullableClass.php":{"hash":"2a234b8a9175b818a8136b4dab8de1c633188","errors":{"3":{"24":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}],"1":[{"message":"Expected 2 newlines after declare statement, found 1.","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectWhitespaceAfterDeclare","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"34":{"27":[{"message":"Class \\SplObjectStorage should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakePhp71NullableClass::typed() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function typed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"4":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"10":{"12":[{"message":"Property \\Ray\\Aop\\FakePhp71NullableClass::$returnTypeVoidCalled does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"12":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnTypeVoid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"18":{"49":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"52":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnNullable()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"9":[{"message":"Expected 1 lines before \"return\", found 0.","source":"SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\JumpStatementsSpacingSniff","severity":5,"fixable":true}]},"24":{"66":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"52":[{"message":"Parameter $name has null default value, but is not marked as nullable.","source":"SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue.NullabilitySymbolRequired","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullableTypeForNullDefaultValueSniff","severity":5,"fixable":true}],"69":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function nullableParam()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"12":[{"message":"Method \\Ray\\Aop\\FakePhp71NullableClass::variadicParam() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function variadicParam()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"38":{"12":[{"message":"Method \\Ray\\Aop\\FakePhp71NullableClass::useTyped() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function useTyped()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":32}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":22}},"Multiple statements on same line":{"values":{"no":10}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP constant case":{"values":{"lower":5}},"CamelCase method name":{"values":{"yes":6}},"PHP type case":{"values":{"lower":4}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"no":6}},"Function spacing after":{"values":{"1":5}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":22,"warningCount":0,"fixableCount":14,"numTokens":229},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeTwoClass.php":{"hash":"dfae040f930dd359afd1a90e99285a5b33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"12":{"1":[{"message":"Each class must be in a file by itself","source":"PSR1.Classes.ClassDeclaration.MultipleClasses","listener":"PHP_CodeSniffer\\Standards\\PSR1\\Sniffs\\Classes\\ClassDeclarationSniff","severity":5,"fixable":false},{"message":"Class name doesn't match filename; expected \"class FakeTwoClass\"","source":"Squiz.Classes.ClassFileName.NoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Classes\\ClassFileNameSniff","severity":5,"fixable":false}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeTwoClass::foo() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function foo()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"12":[{"message":"Method \\Ray\\Aop\\FakeTwoClassTwo::foo() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function foo()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16}},"Line indent":{"values":{"spaces":8}},"PHP keyword case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"no":1,"yes":1}},"Class defined in namespace":{"values":{"yes":2}},"PascalCase class name":{"values":{"yes":2}},"Class opening brace placement":{"values":{"new line":2}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after last":{"values":[2]},"Function spacing before first":{"values":[2]}},"errorCount":9,"warningCount":0,"fixableCount":3,"numTokens":68},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeClassAnnotation.php":{"hash":"620ac23af307ede6eb09ea79151a943433188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"10":{"12":[{"message":"Property \\Ray\\Aop\\FakeClassAnnotation::$value does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":40},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakePhp7ReturnTypeClass.php":{"hash":"12d47a7f058fbee2dbfe52876752a2ee33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"10":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakePhp7ReturnTypeClass::returnTypeArray() does not have @return annotation for its traversable return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnTypeArray()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"12":{"16":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"15":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnTypeBool()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"20":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnTypeFloat()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnTypeInteger()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function returnTypeString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":29}},"Line indent":{"values":{"spaces":20}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":5}},"PHP type case":{"values":{"lower":5}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"no":5}},"Function spacing after":{"values":{"1":4}},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"PHP constant case":{"values":{"lower":1}},"Function spacing after last":{"values":[1]}},"errorCount":20,"warningCount":0,"fixableCount":14,"numTokens":169},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeResource.php":{"hash":"e11a1a36b626fcc4dc5ed9500aa858eb33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":34},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeWeaved.php":{"hash":"2ee014ae616b2379b446840379b53a3733188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"21":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"20":[{"message":"Function is_callable() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"22":{"20":[{"message":"Function call_user_func_array() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"52":[{"message":"Function func_get_args() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"13":[{"message":"Expected 1 lines before \"return\", found 0.","source":"SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\JumpStatementsSpacingSniff","severity":5,"fixable":true}]},"31":{"17":[{"message":"Class \\ReflectionMethod should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"32":{"13":[{"message":"Function func_get_args() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"13":[{"message":"Property \\Ray\\Aop\\FakeWeaved::$rayAopIntercept does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false},{"message":"Private member variable \"rayAopIntercept\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"8":{"13":[{"message":"Property \\Ray\\Aop\\FakeWeaved::$bind does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false},{"message":"Private member variable \"bind\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"10":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaved::___postConstruct() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function ___postConstruct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"15":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaved::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeWeaved::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnSame()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"29":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":31}},"Line indent":{"values":{"spaces":26}},"PHP keyword case":{"values":{"lower":16}},"Multiple statements on same line":{"values":{"no":12}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP constant case":{"values":{"lower":2}},"CamelCase method name":{"values":{"yes":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[6]},"Spacing after object operator":{"values":[6]},"Function spacing after last":{"values":[1]},"Inline comment style":{"values":{"\/\/ ...":2}},"Spaces after control structure open parenthesis":{"values":[1]},"Spaces before control structure close parenthesis":{"values":[1]},"Blank lines at start of control structure":{"values":[1]},"Blank lines at end of control structure":{"values":[1]},"Control structure defined inline":{"values":{"no":1}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"Adjacent assignments aligned":{"values":{"no":1}}},"errorCount":21,"warningCount":0,"fixableCount":13,"numTokens":237},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeArrayTypehinted.php":{"hash":"fae5ade473cf9755e3ec3e40ce92023f33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeArrayTypehinted::returnSame() does not have @param annotation for its traversable parameter $arrayParam.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeArrayTypehinted::returnSame() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function returnSame()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":8}},"Line indent":{"values":{"spaces":3}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":6,"warningCount":0,"fixableCount":4,"numTokens":40},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeAbortProceedInterceptor.php":{"hash":"cce921e133022ea83df9dec7c34bffab33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeAbortProceedInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":45},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeInterceptor.php":{"hash":"78c44f0391b3dffe4940a1908075dd6a33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"8":{"9":[{"message":"Useless variable $result.","source":"SlevomatCodingStandard.Variables.UselessVariable.UselessVariable","listener":"SlevomatCodingStandard\\Sniffs\\Variables\\UselessVariableSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"Line indent":{"values":{"spaces":5}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":6,"warningCount":0,"fixableCount":4,"numTokens":58},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeNum.php":{"hash":"7b97b4dc2d365262216e977dc85f08e233188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Property \\Ray\\Aop\\FakeNum::$value does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":3}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":23},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeMock.php":{"hash":"d5703e386393fca33bcca56beb6fc57433188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"7":{"13":[{"message":"Property \\Ray\\Aop\\FakeMock::$a does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false},{"message":"Private member variable \"a\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"9":{"15":[{"message":"Property \\Ray\\Aop\\FakeMock::$b does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"11":{"12":[{"message":"Property \\Ray\\Aop\\FakeMock::$c does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"16":{"12":[{"message":"Method \\Ray\\Aop\\FakeMock::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMock::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"12":[{"message":"Method \\Ray\\Aop\\FakeMock::getSub() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMock::getSub() does not have parameter type hint nor @param annotation for its parameter $b.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMock::getSub() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"23":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$b\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"41":[{"message":"Parameter $num has null default value, but is not marked as nullable.","source":"SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue.NullabilitySymbolRequired","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullableTypeForNullDefaultValueSniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakeMock::returnValue() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnValue()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"16":[{"message":"Useless parentheses.","source":"SlevomatCodingStandard.PHP.UselessParentheses.UselessParentheses","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\UselessParenthesesSniff","severity":5,"fixable":true}]},"34":{"12":[{"message":"Method \\Ray\\Aop\\FakeMock::getPrivateVal() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function getPrivateVal()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":31}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":8}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":2,"no":2}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"PHP constant case":{"values":{"lower":2}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Function spacing after last":{"values":[1]}},"errorCount":23,"warningCount":0,"fixableCount":5,"numTokens":198},"\/Users\/akihito\/git\/Ray.Aop\/src\/Invocation.php":{"hash":"8298763592237e522f001f7f32c0692133188","errors":{"23":{"36":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"38":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"30":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":23,"81-120":3}},"Line indent":{"values":{"spaces":12}},"PHP keyword case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":4,"warningCount":0,"fixableCount":4,"numTokens":136},"\/Users\/akihito\/git\/Ray.Aop\/src\/MethodInterceptor.php":{"hash":"1b510fe6f9f1f552418840eb46d0675033188","errors":{"22":{"8":[{"message":"Parameter comment must start with a capital letter","source":"Squiz.Commenting.FunctionComment.ParamCommentNotCapital","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Parameter comment must end with a full stop","source":"Squiz.Commenting.FunctionComment.ParamCommentFullStop","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":18,"81-120":7}},"Line indent":{"values":{"spaces":11}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":121},"\/Users\/akihito\/git\/Ray.Aop\/src\/BuiltinMatcher.php":{"hash":"c5810c7cf7ec384af98b880fecc27a5e33188","errors":{"31":{"47":[{"message":"Function ucwords() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"32":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"13":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\BuiltinMatcher::$matcherName with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"16":{"13":[{"message":"Property \\Ray\\Aop\\BuiltinMatcher::$matcherName does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"matcherName\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"18":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\BuiltinMatcher::$matcher with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"21":{"13":[{"message":"Property \\Ray\\Aop\\BuiltinMatcher::$matcher does not have native type hint for its value but it should be possible to add it based on @var annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"matcher\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"24":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $arguments does not match actual variable name $matcherName","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"12":[{"message":"Expected type hint \"array\"; found \"string\" for $arguments","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"23":{"5":[{"message":"Doc comment for parameter \"$matcherName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"26":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"36":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"34":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"43":{"76":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"78":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"42":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"51":{"79":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"81":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"50":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"48":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$arguments\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":44,"81-120":3}},"Line indent":{"values":{"spaces":38}},"PHP keyword case":{"values":{"lower":23}},"Multiple statements on same line":{"values":{"no":17}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[10]},"Spacing after object operator":{"values":[10]},"Adjacent assignments aligned":{"values":{"no":1}},"Spacing before string concat":{"values":{"1":2}},"Spacing after string concat":{"values":{"1":2}},"Spaces after control structure open parenthesis":{"values":[1]},"Spaces before control structure close parenthesis":{"values":[1]},"Blank lines at start of control structure":{"values":[1]},"Blank lines at end of control structure":{"values":[1]},"Control structure defined inline":{"values":{"no":1}},"CamelCase method name":{"values":{"yes":2}},"Function spacing after last":{"values":[1]}},"errorCount":28,"warningCount":0,"fixableCount":16,"numTokens":356},"\/Users\/akihito\/git\/Ray.Aop\/src\/Pointcut.php":{"hash":"5e6828e06594b55c316fe746dcca232133188","errors":{"9":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Pointcut::$classMatcher with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"12":{"12":[{"message":"Property \\Ray\\Aop\\Pointcut::$classMatcher does not have native type hint for its value but it should be possible to add it based on @var annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Pointcut::$methodMatcher with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"12":[{"message":"Property \\Ray\\Aop\\Pointcut::$methodMatcher does not have native type hint for its value but it should be possible to add it based on @var annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"19":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Pointcut::$interceptors with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"22":{"12":[{"message":"Property \\Ray\\Aop\\Pointcut::$interceptors does not have native type hint for its value but it should be possible to add it based on @var annotation \"array<(MethodInterceptor|class-string<MethodInterceptor>)>\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"25":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $interceptors does not match actual variable name $classMatcher","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Doc comment for parameter \"$classMatcher\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$methodMatcher\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"29":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"31":{"29":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":25,"81-120":2}},"Line indent":{"values":{"spaces":21}},"PHP keyword case":{"values":{"lower":8}},"Multiple statements on same line":{"values":{"no":8}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[3]},"Spacing after object operator":{"values":[3]},"Adjacent assignments aligned":{"values":{"no":1}}},"errorCount":12,"warningCount":0,"fixableCount":8,"numTokens":163},"\/Users\/akihito\/git\/Ray.Aop\/src\/Matcher.php":{"hash":"41d999e810638aa8ad59fe7afee65f9a33188","errors":{"25":{"15":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"37":{"15":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"14":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"23":{"52":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"54":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"22":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"20":{"5":[{"message":"Doc comment for parameter \"$annotationName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"35":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"34":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"5":[{"message":"Doc comment for parameter \"$superClass\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"47":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"46":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"44":{"5":[{"message":"Doc comment for parameter \"$prefix\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"5":[{"message":"Useless documentation comment with @inheritDoc.","source":"SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\UselessInheritDocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment for parameter \"$matcher\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"75":{"58":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"60":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"74":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":63,"81-120":2}},"Line indent":{"values":{"spaces":57}},"PHP keyword case":{"values":{"lower":40}},"Multiple statements on same line":{"values":{"no":13}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":7}},"Function opening brace placement":{"values":{"new line":7}},"Function has doc comment":{"values":{"yes":7}},"Function spacing after":{"values":{"1":6}},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":5}},"Array end comma":{"values":{"no":5}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"Inline comment style":{"values":{"\/\/ ...":2}},"Function spacing before":{"values":{"1":2}},"Function spacing after last":{"values":[1]}},"errorCount":20,"warningCount":0,"fixableCount":11,"numTokens":463},"\/Users\/akihito\/git\/Ray.Aop\/src\/MatcherInterface.php":{"hash":"92febcfb682759062bc1b884eda840f833188","errors":{"7":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]},"14":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::any() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"23":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::annotatedWith() does not have native type hint for its parameter $annotationName but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Ray\\Aop\\MatcherInterface::annotatedWith() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Type hint \"string\" missing for $annotationName","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::subclassesOf() does not have native type hint for its parameter $superClass but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Ray\\Aop\\MatcherInterface::subclassesOf() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Type hint \"string\" missing for $superClass","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"28":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::startsWith() does not have native type hint for its parameter $prefix but it should be possible to add it based on @param annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":0,"fixable":true},{"message":"Method \\Ray\\Aop\\MatcherInterface::startsWith() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Type hint \"string\" missing for $prefix","source":"Squiz.Commenting.FunctionComment.ScalarTypeHintMissing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"48":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::logicalOr() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"43":{"5":[{"message":"Doc comment for parameter \"$matcherA\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$matcherB\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"55":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::logicalAnd() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"50":{"5":[{"message":"Doc comment for parameter \"$matcherA\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$matcherB\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"62":{"12":[{"message":"Method \\Ray\\Aop\\MatcherInterface::logicalNot() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"AbstractMatcher\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"57":{"5":[{"message":"Doc comment for parameter \"$matcher\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":47,"81-120":7}},"Line indent":{"values":{"spaces":48}},"PHP keyword case":{"values":{"lower":17}},"Multiple statements on same line":{"values":{"no":9}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":7}},"Function has doc comment":{"values":{"yes":7}},"Function spacing after":{"values":{"1":6}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":22,"warningCount":0,"fixableCount":10,"numTokens":302},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeWeaverMock.php":{"hash":"b8735237ef467d84318053a93615347433188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"7":{"13":[{"message":"Property \\Ray\\Aop\\FakeWeaverMock::$a does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false},{"message":"Private member variable \"a\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"9":{"15":[{"message":"Property \\Ray\\Aop\\FakeWeaverMock::$b does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"11":{"12":[{"message":"Property \\Ray\\Aop\\FakeWeaverMock::$c does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"16":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaverMock::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeWeaverMock::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"15":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaverMock::getSub() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeWeaverMock::getSub() does not have parameter type hint nor @param annotation for its parameter $b.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeWeaverMock::getSub() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"23":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"21":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$b\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"41":[{"message":"Parameter $num has null default value, but is not marked as nullable.","source":"SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue.NullabilitySymbolRequired","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullableTypeForNullDefaultValueSniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakeWeaverMock::returnValue() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnValue()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"16":[{"message":"Useless parentheses.","source":"SlevomatCodingStandard.PHP.UselessParentheses.UselessParentheses","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\UselessParenthesesSniff","severity":5,"fixable":true}]},"34":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaverMock::getPrivateVal() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function getPrivateVal()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":31}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":18}},"Multiple statements on same line":{"values":{"no":8}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"yes":2,"no":2}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"PHP constant case":{"values":{"lower":2}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Function spacing after last":{"values":[1]}},"errorCount":23,"warningCount":0,"fixableCount":5,"numTokens":198},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeClass.php":{"hash":"abfbd7624f652e7a5f7ee357954f23c533188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"6":{"1":[{"message":"Type Ray\\Aop\\Annotation\\FakeMarker2 is not used in this file.","source":"SlevomatCodingStandard.Namespaces.UnusedUses.UnusedUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UnusedUsesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"13":{"12":[{"message":"Property \\Ray\\Aop\\FakeClass::$a does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"15":{"12":[{"message":"Property \\Ray\\Aop\\FakeClass::$msg does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"17":{"12":[{"message":"Method \\Ray\\Aop\\FakeClass::__toString() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function __toString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"12":[{"message":"Method \\Ray\\Aop\\FakeClass::add() does not have parameter type hint nor @param annotation for its parameter $n.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeClass::add() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"24":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"5":[{"message":"Doc comment for parameter \"$n\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"12":[{"message":"Method \\Ray\\Aop\\FakeClass::getDouble() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeClass::getDouble() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function getDouble()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"35":{"12":[{"message":"Method \\Ray\\Aop\\FakeClass::getSub() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeClass::getSub() does not have parameter type hint nor @param annotation for its parameter $b.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeClass::getSub() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function getSub()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"8":[{"message":"Method \\Ray\\Aop\\FakeClass::getTriple() has useless @param annotation for parameter $c.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.UselessAnnotation","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":true},{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected \"integer\" but found \"int\" for parameter type","source":"Squiz.Commenting.FunctionComment.IncorrectParamVarName","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":true}]},"44":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":41}},"Line indent":{"values":{"spaces":30}},"PHP keyword case":{"values":{"lower":21}},"Multiple statements on same line":{"values":{"no":11}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function opening brace placement":{"values":{"new line":5}},"Function has doc comment":{"values":{"no":3,"yes":2}},"Function spacing after":{"values":{"1":4}},"Function spacing before":{"values":{"1":1}},"CamelCase method name":{"values":{"yes":4}},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]},"PHP type case":{"values":{"lower":1}},"Function spacing after last":{"values":[1]}},"errorCount":23,"warningCount":0,"fixableCount":7,"numTokens":252},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeMethodInterceptor.php":{"hash":"61ba412b422557b580fce98344a3095433188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeMethodInterceptor::invoke() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":4,"numTokens":47},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeMethodAnnotationReaderInterceptor.php":{"hash":"0313c0d45e761dbf65bb8f6c2e81b75733188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"15":{"13":[{"message":"Class \\Ray\\Aop\\ReflectionMethod should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"8":{"19":[{"message":"Property \\Ray\\Aop\\FakeMethodAnnotationReaderInterceptor::$classAnnotations does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"9":{"19":[{"message":"Property \\Ray\\Aop\\FakeMethodAnnotationReaderInterceptor::$classAnnotation does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"10":{"19":[{"message":"Property \\Ray\\Aop\\FakeMethodAnnotationReaderInterceptor::$methodAnnotations does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"11":{"19":[{"message":"Property \\Ray\\Aop\\FakeMethodAnnotationReaderInterceptor::$methodAnnotation does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"13":{"12":[{"message":"Method \\Ray\\Aop\\FakeMethodAnnotationReaderInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"16":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 18 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"18":{"33":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"19":{"33":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"20":{"32":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":18,"81-120":2}},"Line indent":{"values":{"spaces":14}},"PHP keyword case":{"values":{"lower":19}},"Multiple statements on same line":{"values":{"no":12}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before":{"values":{"1":1}},"Adjacent assignments aligned":{"values":{"no":1}},"Spacing before object operator":{"values":[14]},"Spacing after object operator":{"values":[14]}},"errorCount":15,"warningCount":0,"fixableCount":9,"numTokens":185},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeWeaverScript.php":{"hash":"7e3b2c441e13d08c8c8db48d1ca3e72e33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeWeaverScript::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeWeaverScript::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnSame()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":6,"warningCount":0,"fixableCount":3,"numTokens":39},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeOnionInterceptor1.php":{"hash":"283be4524f6482495ebf6cd55d35d33f33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeOnionInterceptor1::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":49},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeOnionInterceptor3.php":{"hash":"c2f33b07d3d12f648baee3f35380f1ef33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeOnionInterceptor3::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":5,"warningCount":0,"fixableCount":3,"numTokens":49},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeAnnotateClass.php":{"hash":"1ae55e77a687f9951a42ffb7c69a016a33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"14":{"12":[{"message":"Property \\Ray\\Aop\\FakeAnnotateClass::$a does not have native type hint nor @var annotation for its value.","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":5,"fixable":false}]},"22":{"12":[{"message":"Method \\Ray\\Aop\\FakeAnnotateClass::getDouble() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeAnnotateClass::getDouble() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false}]},"21":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"16":{"5":[{"message":"Doc comment for parameter \"$a\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":23}},"Line indent":{"values":{"spaces":11}},"PHP keyword case":{"values":{"lower":9}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":1}},"Function spacing after last":{"values":[1]},"Function spacing before":{"values":{"1":1}}},"errorCount":8,"warningCount":0,"fixableCount":3,"numTokens":129},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeArrayInterface.php":{"hash":"8536f53eb9449079a1ba7ed5970844e033188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"4":{"1":[{"message":"Superfluous suffix \"Interface\".","source":"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix","listener":"SlevomatCodingStandard\\Sniffs\\Classes\\SuperfluousInterfaceNamingSniff","severity":0,"fixable":false}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeArrayInterface::invoke() does not have @param annotation for its traversable parameter $array.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeArrayInterface::invoke() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":6}},"Line indent":{"values":{"spaces":1}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":7,"warningCount":0,"fixableCount":4,"numTokens":35},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeMatcher.php":{"hash":"8414118baa3cd490b29cb9add94cbd1233188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"12":{"34":[{"message":"Class \\ReflectionClass should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakeMatcher::matchesClass() does not have @param annotation for its traversable parameter $arguments.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMatcher::matchesClass() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function matchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"35":[{"message":"Class \\ReflectionMethod should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"12":[{"message":"Method \\Ray\\Aop\\FakeMatcher::matchesMethod() does not have @param annotation for its traversable parameter $arguments.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMatcher::matchesMethod() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function matchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeMatcher::__construct() does not have parameter type hint nor @param annotation for its parameter $arg1.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMatcher::__construct() does not have parameter type hint nor @param annotation for its parameter $arg2.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"9":{"28":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"15":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"25":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":26}},"Line indent":{"values":{"spaces":21}},"PHP keyword case":{"values":{"lower":20}},"Multiple statements on same line":{"values":{"no":9}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before first":{"values":[1]},"PHP constant case":{"values":{"lower":2}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"CamelCase method name":{"values":{"yes":2}},"PHP type case":{"values":{"lower":2}},"Spaces after control structure open parenthesis":{"values":[2]},"Spaces before control structure close parenthesis":{"values":[2]},"Blank lines at start of control structure":{"values":[2]},"Blank lines at end of control structure":{"values":[2]},"Control structure defined inline":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":17,"warningCount":0,"fixableCount":8,"numTokens":223},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeAssisted.php":{"hash":"186d065c61fd62d8297754f0dc358d0833188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"6":{"2":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"5":{"4":[{"message":"Use of annotation @license is forbidden.","source":"SlevomatCodingStandard.Commenting.ForbiddenAnnotations.AnnotationForbidden","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\ForbiddenAnnotationsSniff","severity":5,"fixable":true}]},"7":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"17":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\FakeAssisted::$values with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"20":{"12":[{"message":"Property \\Ray\\Aop\\FakeAssisted::$values does not have native type hint for its value but it should be possible to add it based on @var annotation \"array<string>\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":19}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":7,"warningCount":0,"fixableCount":7,"numTokens":89},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeMockNoDoc.php":{"hash":"b207b169fac79842a41fadc51abe554e33188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeMockNoDoc::returnSame() does not have parameter type hint nor @param annotation for its parameter $a.","source":"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ParameterTypeHintSniff","severity":5,"fixable":false},{"message":"Method \\Ray\\Aop\\FakeMockNoDoc::returnSame() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function returnSame()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":9}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":5}},"Multiple statements on same line":{"values":{"no":2}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]}},"errorCount":6,"warningCount":0,"fixableCount":3,"numTokens":39},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeChangeArgsInterceptor.php":{"hash":"314ec4f2abe9002cd2758daf9751229833188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]},"6":{"12":[{"message":"Method \\Ray\\Aop\\FakeChangeArgsInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"8":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":11}},"Line indent":{"values":{"spaces":6}},"PHP keyword case":{"values":{"lower":6}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":6,"warningCount":0,"fixableCount":4,"numTokens":73},"\/Users\/akihito\/git\/Ray.Aop\/tests\/MatcherTest.php":{"hash":"dd7c7977272b36706406eadcc4c231c133188","errors":{"34":{"32":[{"message":"Class \\Ray\\Aop\\Exception\\InvalidAnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"44":{"32":[{"message":"Class \\Ray\\Aop\\Exception\\InvalidArgumentException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"15":{"48":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"50":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"14":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"17":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"18":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"19":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"82":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"99":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"20":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"82":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"99":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"116":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"21":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"81":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"22":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"81":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"98":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"24":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"82":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"25":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"26":{"57":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"32":{"54":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"56":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"31":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"36":{"10":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"42":{"53":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"55":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"41":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"8":[{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"46":{"10":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":{"20":{"133":[{"message":"Line exceeds 120 characters; contains 133 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"21":{"122":[{"message":"Line exceeds 120 characters; contains 122 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]},"22":{"139":[{"message":"Line exceeds 120 characters; contains 139 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":29,"81-120":7,"121-150":3}},"Line indent":{"values":{"spaces":31}},"PHP keyword case":{"values":{"lower":34}},"Multiple statements on same line":{"values":{"no":17}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":3}},"PHP type case":{"values":{"lower":3}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"yes":3}},"Function spacing after":{"values":{"1":2}},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[35]},"Spacing after object operator":{"values":[35]},"PHP constant case":{"values":{"lower":2}},"Function spacing after last":{"values":[1]}},"errorCount":34,"warningCount":3,"fixableCount":28,"numTokens":465},"\/Users\/akihito\/git\/Ray.Aop\/tests\/VariadicParamsTest.php":{"hash":"38a3152992655a3da56131457094486733188","errors":{"18":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"11":{"42":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"44":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testVariadicParams()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"16":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"17":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"15":{"91":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16,"81-120":2}},"Line indent":{"values":{"spaces":11}},"PHP keyword case":{"values":{"lower":13}},"Multiple statements on same line":{"values":{"no":11}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":1}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"Spacing before object operator":{"values":[8]},"Spacing after object operator":{"values":[8]},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}}},"errorCount":10,"warningCount":0,"fixableCount":9,"numTokens":204},"\/Users\/akihito\/git\/Ray.Aop\/src\/ReflectiveMethodInvocation.php":{"hash":"e9fffda99e4b863eee867377c154909233188","errors":{"7":{"16":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"8":{"26":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}],"1":[{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"9":{"1":[{"message":"Similar statements must be grouped together inside header blocks; the first \"use\" statement was found on line 7","source":"PSR12.Files.FileHeader.IncorrectGrouping","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is ReflectionClass.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"52":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function is_callable() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"65":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"66":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"105":{"24":[{"message":"Function array_shift() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"110":{"16":[{"message":"Function call_user_func_array() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocation::$object with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"13":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocation::$object does not have native type hint for its value but it should be possible to add it based on @var annotation \"object\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"object\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"19":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocation::$arguments with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"22":{"13":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocation::$arguments does not have native type hint for its value but it should be possible to add it based on @var annotation \"ArrayObject<int, mixed>\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"arguments\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocation::$method with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"27":{"13":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocation::$method does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"method\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"29":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocation::$interceptors with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"32":{"13":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocation::$interceptors does not have native type hint for its value but it should be possible to add it based on @var annotation \"MethodInterceptor[]\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"interceptors\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"34":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocation::$callable with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"37":{"13":[{"message":"Private member variable \"callable\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"40":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $interceptors does not match actual variable name $object","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $arguments does not match actual variable name $method","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"43":{"12":[{"message":"Expected type hint \"array\"; found \"object\" for $interceptors","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected type hint \"array\"; found \"string\" for $arguments","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"39":{"5":[{"message":"Doc comment for parameter \"$object\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"51":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"21":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"53":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"54":{"26":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"58":{"5":[{"message":"Useless documentation comment with @inheritDoc.","source":"SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\UselessInheritDocCommentSniff","severity":0,"fixable":true}]},"61":{"33":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"35":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"60":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"76":{"5":[{"message":"Useless documentation comment with @inheritDoc.","source":"SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\UselessInheritDocCommentSniff","severity":0,"fixable":true}]},"79":{"36":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"38":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"78":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"84":{"5":[{"message":"Useless documentation comment with @inheritDoc.","source":"SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\UselessInheritDocCommentSniff","severity":0,"fixable":true}]},"87":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"86":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"89":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"90":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"92":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"102":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"106":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"115":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":102}},"Line indent":{"values":{"spaces":92}},"PHP keyword case":{"values":{"lower":45}},"Multiple statements on same line":{"values":{"no":35}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":2}},"Function has doc comment":{"values":{"yes":6}},"Function spacing after":{"values":{"1":5}},"Function spacing before":{"values":{"1":1}},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Spacing before object operator":{"values":[26]},"Spacing after object operator":{"values":[26]},"Adjacent assignments aligned":{"values":{"no":3}},"CamelCase method name":{"values":{"yes":5}},"Function opening brace placement":{"values":{"new line":5}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Spacing after cast statement":{"values":{"1":1}},"Function spacing after last":{"values":[1]}},"errorCount":56,"warningCount":0,"fixableCount":37,"numTokens":737},"\/Users\/akihito\/git\/Ray.Aop\/src\/NullInterceptor.php":{"hash":"7d636028f1c0c0d5c5220445078bc4c433188","errors":{"9":{"12":[{"message":"Method \\Ray\\Aop\\NullInterceptor::invoke() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":10}},"Line indent":{"values":{"spaces":4}},"PHP keyword case":{"values":{"lower":7}},"Multiple statements on same line":{"values":{"no":3}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Spacing before object operator":{"values":[1]},"Spacing after object operator":{"values":[1]}},"errorCount":2,"warningCount":0,"fixableCount":0,"numTokens":59},"\/Users\/akihito\/git\/Ray.Aop\/src\/Joinpoint.php":{"hash":"e59ea982557213de83d5f2bfaa1dd2bd33188","errors":{"46":{"12":[{"message":"Method \\Ray\\Aop\\Joinpoint::getThis() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"object\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":43}},"Line indent":{"values":{"spaces":19}},"PHP keyword case":{"values":{"lower":7}},"Multiple statements on same line":{"values":{"no":4}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":2}},"Function has doc comment":{"values":{"yes":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before first":{"values":[1]},"Function spacing after last":{"values":[1]}},"errorCount":1,"warningCount":0,"fixableCount":1,"numTokens":200},"\/Users\/akihito\/git\/Ray.Aop\/src\/Weaver.php":{"hash":"90e1859e40b7f32c0c8dc813146d7fdd33188","errors":{"51":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"65":{"13":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"69":{"13":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"20":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"74":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"81":{"17":[{"message":"Function sprintf() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"55":[{"message":"Function str_replace() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"82":{"13":[{"message":"Function file_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"9":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Weaver::$bind with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"12":{"13":[{"message":"Property \\Ray\\Aop\\Weaver::$bind does not have native type hint for its value but it should be possible to add it based on @var annotation \"BindInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"bind\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Weaver::$bindName with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"13":[{"message":"Property \\Ray\\Aop\\Weaver::$bindName does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"bindName\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"19":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Weaver::$classDir with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"22":{"13":[{"message":"Property \\Ray\\Aop\\Weaver::$classDir does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"classDir\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Weaver::$aopClassName with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"27":{"13":[{"message":"Property \\Ray\\Aop\\Weaver::$aopClassName does not have native type hint for its value but it should be possible to add it based on @var annotation \"AopClassName\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"aopClassName\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"29":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Weaver::$compiler with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"32":{"13":[{"message":"Property \\Ray\\Aop\\Weaver::$compiler does not have native type hint for its value but it should be possible to add it based on @var annotation \"Compiler\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"compiler\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"34":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"36":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 9 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"37":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"38":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"39":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"47":{"61":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"63":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"46":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"44":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"45":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"62":{"42":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"44":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"58":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"67":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"72":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"68":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"79":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Missing doc comment for function loadClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":73,"81-120":1}},"Line indent":{"values":{"spaces":68}},"PHP keyword case":{"values":{"lower":31}},"Multiple statements on same line":{"values":{"no":28}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"no":2,"yes":2}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[19]},"Spacing after object operator":{"values":[19]},"Adjacent assignments aligned":{"values":{"no":1,"yes":1}},"CamelCase method name":{"values":{"yes":3}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"PHP constant case":{"values":{"lower":3}},"Function spacing after last":{"values":[1]}},"errorCount":47,"warningCount":0,"fixableCount":36,"numTokens":576},"\/Users\/akihito\/git\/Ray.Aop\/tests\/CodeGenPhp71Test.php":{"hash":"754a739f1a9c93f380c88e755cc0db5033188","errors":{"13":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGenPhp71Test::$codeGen with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"16":{"13":[{"message":"Property \\Ray\\Aop\\CodeGenPhp71Test::$codeGen does not have native type hint for its value but it should be possible to add it based on @var annotation \"CodeGen\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"codeGen\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"18":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"20":{"39":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"74":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"23":{"42":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"44":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testReturnTypeVoid()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"27":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"32":{"63":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"65":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testReturnTypeVoidContainsNoReturnValue()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"34":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"41":{"46":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"48":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testReturnTypeNullable()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"43":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"45":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"55":{"55":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"57":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"54":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"52":{"5":[{"message":"Doc comment for parameter \"$code\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"61":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNullableParam()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"63":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"65":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"70":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testTypedParam()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"74":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"79":{"36":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"38":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testUseTyped()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"81":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"83":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":65,"81-120":9}},"Line indent":{"values":{"spaces":65}},"PHP keyword case":{"values":{"lower":41}},"Multiple statements on same line":{"values":{"no":40}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":8}},"PHP type case":{"values":{"lower":7}},"Function opening brace placement":{"values":{"new line":8}},"Function has doc comment":{"values":{"no":7,"yes":1}},"Function spacing after":{"values":{"1":7}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[44]},"Spacing after object operator":{"values":[44]},"Short array syntax used":{"values":{"yes":6}},"Array end comma":{"values":{"no":6}},"Adjacent assignments aligned":{"values":{"no":5}},"Function spacing after last":{"values":[1]}},"errorCount":41,"warningCount":0,"fixableCount":31,"numTokens":745},"\/Users\/akihito\/git\/Ray.Aop\/tests\/Fake\/FakeWeavedClass.php":{"hash":"a582e8a13077a81c3caee3f6a316160733188","errors":{"1":{"1":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true},{"message":"Missing declare(strict_types=1).","source":"SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\DeclareStrictTypesSniff","severity":5,"fixable":true}]},"2":{"1":[{"message":"Expected 1 lines before namespace statement, found 0.","source":"SlevomatCodingStandard.Namespaces.NamespaceSpacing.IncorrectLinesCountBeforeNamespace","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\NamespaceSpacingSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":5}},"PHP keyword case":{"values":{"lower":4}},"Multiple statements on same line":{"values":{"no":1}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}}},"errorCount":3,"warningCount":0,"fixableCount":3,"numTokens":25},"\/Users\/akihito\/git\/Ray.Aop\/tests\/PointcutTest.php":{"hash":"62269336c3a9e122f7b116fa7c1ca30333188","errors":{"11":{"31":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"33":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNew()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":16}},"Line indent":{"values":{"spaces":9}},"PHP keyword case":{"values":{"lower":11}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Short array syntax used":{"values":{"yes":3}},"Array end comma":{"values":{"no":3}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":3,"warningCount":0,"fixableCount":2,"numTokens":125},"\/Users\/akihito\/git\/Ray.Aop\/tests\/ReflectiveMethodInvocationTest.php":{"hash":"b719fcb07f449d402992925a7d87a88733188","errors":{"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocationTest::$invocation with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"15":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocationTest::$invocation does not have native type hint for its value but it should be possible to add it based on @var annotation \"ReflectiveMethodInvocation\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"19":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\ReflectiveMethodInvocationTest::$fake with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"22":{"15":[{"message":"Property \\Ray\\Aop\\ReflectiveMethodInvocationTest::$fake does not have native type hint for its value but it should be possible to add it based on @var annotation \"FakeClass\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"24":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"27":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"31":{"37":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"39":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"37":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetMethodMethodName()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"44":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetArguments()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"50":{"35":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"37":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testProceed()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"56":{"43":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"45":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testProceedTwoTimes()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"63":{"35":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"37":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetThis()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"69":{"43":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"45":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetParentMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"71":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"73":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"78":{"55":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"57":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testProceedMultipleInterceptors()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"80":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"81":{"74":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"95":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"86":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetNamedArguments()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"92":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetAnnotation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"98":{"44":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"46":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetClassAnnotati()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":82,"81-120":4}},"Line indent":{"values":{"spaces":76}},"PHP keyword case":{"values":{"lower":43}},"Multiple statements on same line":{"values":{"no":40}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":12}},"PHP type case":{"values":{"lower":14}},"Function opening brace placement":{"values":{"new line":12}},"Function has doc comment":{"values":{"no":12}},"Function spacing after":{"values":{"1":11}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[59]},"Spacing after object operator":{"values":[59]},"Adjacent assignments aligned":{"values":{"no":3}},"Short array syntax used":{"values":{"yes":6}},"Array end comma":{"values":{"no":6}},"Spacing after cast statement":{"values":{"1":2}},"Function spacing after last":{"values":[1]}},"errorCount":49,"warningCount":0,"fixableCount":37,"numTokens":830},"\/Users\/akihito\/git\/Ray.Aop\/tests\/WeaverTest.php":{"hash":"87e3702630711ddec03db3103b7f5aab33188","errors":{"8":{"22":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"9":{"1":[{"message":"The class-based use imports must follow the namespace declaration in the file header","source":"PSR12.Files.FileHeader.IncorrectOrder","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is PHPUnit\\Framework\\TestCase.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"55":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"65":{"19":[{"message":"Function unserialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"31":[{"message":"Function serialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"67":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"13":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"12":[{"message":"Method name \"WeaverTest::test__construct\" is not in camel caps format","source":"PSR1.Methods.CamelCapsMethodName.NotCamelCaps","listener":"PHP_CodeSniffer\\Standards\\PSR1\\Sniffs\\Methods\\CamelCapsMethodNameSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function test__construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"15":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"17":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"18":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"16":{"84":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"27":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"26":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Doc comment for parameter \"$weaver\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"39":{"37":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"39":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"38":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"41":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"42":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"43":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"44":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"52":{"53":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"55":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"51":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"5":[{"message":"Doc comment for parameter \"$weaver\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"63":{"54":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"56":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"62":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"60":{"5":[{"message":"Doc comment for parameter \"$weaver\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testWeaveCompiled()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"80":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"76":{"14":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"77":{"14":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"78":{"14":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"82":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":75,"81-120":1}},"Line indent":{"values":{"spaces":67}},"PHP keyword case":{"values":{"lower":37}},"Multiple statements on same line":{"values":{"no":35}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"no":1,"yes":5}},"Function opening brace placement":{"values":{"new line":6}},"Function has doc comment":{"values":{"no":2,"yes":4}},"Function spacing after":{"values":{"1":5}},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":4,"yes":1}},"Spacing before object operator":{"values":[31]},"Spacing after object operator":{"values":[31]},"Short array syntax used":{"values":{"yes":8}},"Array end comma":{"values":{"no":8}},"Spacing before string concat":{"values":{"1":5}},"Spacing after string concat":{"values":{"1":5}},"PHP type case":{"values":{"lower":5}},"PHP constant case":{"values":{"lower":3}},"Function spacing after last":{"values":[1]}},"errorCount":48,"warningCount":0,"fixableCount":37,"numTokens":761},"\/Users\/akihito\/git\/Ray.Aop\/tests\/CodeGenTest.php":{"hash":"e80ff4fa4f495ce88667e475e4404f0233188","errors":{"15":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGenTest::$codeGen with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"18":{"13":[{"message":"Property \\Ray\\Aop\\CodeGenTest::$codeGen does not have native type hint for its value but it should be possible to add it based on @var annotation \"CodeGen\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"codeGen\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"20":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"22":{"39":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"74":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"25":{"44":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"46":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testTypeDeclarations()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"27":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"29":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"34":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testReturnType()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"36":{"17":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"38":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"43":{"46":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"48":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testInvalidSourceClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"46":{"72":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":35,"81-120":5}},"Line indent":{"values":{"spaces":29}},"PHP keyword case":{"values":{"lower":28}},"Multiple statements on same line":{"values":{"no":21}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"PHP type case":{"values":{"lower":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"no":4}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[19]},"Spacing after object operator":{"values":[19]},"Short array syntax used":{"values":{"yes":2}},"Array end comma":{"values":{"no":2}},"Adjacent assignments aligned":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":22,"warningCount":0,"fixableCount":17,"numTokens":378},"\/Users\/akihito\/git\/Ray.Aop\/src\/AopClassName.php":{"hash":"126a2f7eefd0a1e52e52ed525fd65bf833188","errors":{"21":{"16":[{"message":"Function sprintf() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"41":[{"message":"Function crc32() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"9":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\AopClassName::$classDir with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"12":{"13":[{"message":"Property \\Ray\\Aop\\AopClassName::$classDir does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"classDir\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"14":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"19":{"63":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"65":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function __invoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":18}},"Line indent":{"values":{"spaces":12}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":5}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":2}},"Function opening brace placement":{"values":{"new line":2}},"Function has doc comment":{"values":{"no":2}},"Function spacing after":{"values":{"1":1}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]},"Function spacing after last":{"values":[1]},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}}},"errorCount":9,"warningCount":0,"fixableCount":6,"numTokens":129},"\/Users\/akihito\/git\/Ray.Aop\/src\/CodeGen.php":{"hash":"e75e1fc668b67635daa5a904fb8e9a4433188","errors":{"7":{"25":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"8":{"49":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}],"1":[{"message":"The class-based use imports must follow the namespace declaration in the file header","source":"PSR12.Files.FileHeader.IncorrectOrder","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is Doctrine\\Common\\Annotations\\AnnotationReader.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"9":{"1":[{"message":"Similar statements must be grouped together inside header blocks; the first \"use function\" statement was found on line 7","source":"PSR12.Files.FileHeader.IncorrectGrouping","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}],"21":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"10":{"1":[{"message":"Similar statements must be grouped together inside header blocks; the first \"use\" statement was found on line 8","source":"PSR12.Files.FileHeader.IncorrectGrouping","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"72":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"105":{"13":[{"message":"Function is_bool() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"106":{"51":[{"message":"Function get_class() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"108":{"17":[{"message":"Function file_get_contents() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"113":{"13":[{"message":"Function is_array() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"127":{"16":[{"message":"Function serialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"183":{"16":[{"message":"Function serialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"25":{"8":[{"message":"Class \\PhpParser\\Parser should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"30":{"8":[{"message":"Class \\PhpParser\\BuilderFactory should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"50":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGen::$parser with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"27":{"13":[{"message":"Property \\Ray\\Aop\\CodeGen::$parser does not have native type hint for its value but it should be possible to add it based on @var annotation \"\\PhpParser\\Parser\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"parser\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"29":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGen::$factory with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"32":{"13":[{"message":"Property \\Ray\\Aop\\CodeGen::$factory does not have native type hint for its value but it should be possible to add it based on @var annotation \"\\PhpParser\\BuilderFactory\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"factory\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"34":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGen::$codeGenMethod with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"37":{"13":[{"message":"Property \\Ray\\Aop\\CodeGen::$codeGenMethod does not have native type hint for its value but it should be possible to add it based on @var annotation \"CodeGenMethod\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"codeGenMethod\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"39":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGen::$reader with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"42":{"13":[{"message":"Property \\Ray\\Aop\\CodeGen::$reader does not have native type hint for its value but it should be possible to add it based on @var annotation \"AnnotationReader\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"reader\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"44":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CodeGen::$aopClassName with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"47":{"13":[{"message":"Property \\Ray\\Aop\\CodeGen::$aopClassName does not have native type hint for its value but it should be possible to add it based on @var annotation \"AopClassName\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"aopClassName\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"49":{"5":[{"message":"Doc comment for parameter \"$parser\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$factory\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$aopClassName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"57":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"58":{"24":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"60":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"25":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"61":{"29":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"69":{"81":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"83":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $sourceClass","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"68":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"67":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"64":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"73":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 16 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"74":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 15 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"75":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 15 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"76":{"23":[{"message":"Equals sign not aligned with surrounding assignments; expected 11 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"77":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 9 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"78":{"28":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"81":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 11 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"83":{"13":[{"message":"Equals sign not aligned with surrounding assignments; expected 14 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"84":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 12 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"99":{"61":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"63":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"98":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"97":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"102":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"107":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"111":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"109":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"123":{"65":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"67":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"122":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"121":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"135":{"58":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"60":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"131":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"137":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"171":{"67":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"69":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"170":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"169":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"174":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 11 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"175":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"179":{"13":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"177":{"13":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"187":{"8":[{"message":"Null type hint should be on last position in \"null|string\".","source":"SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition.NullTypeHintNotOnLastPosition","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\NullTypeHintOnLastPositionSniff","severity":5,"fixable":true}]},"189":{"13":[{"message":"Method \\Ray\\Aop\\CodeGen::getNamespace() does not have native return type hint for its return value but it should be possible to add it based on @return annotation \"null|string\".","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"186":{"5":[{"message":"Doc comment for parameter \"$source\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"192":{"13":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":170,"81-120":3}},"Line indent":{"values":{"spaces":153}},"PHP keyword case":{"values":{"lower":64}},"Multiple statements on same line":{"values":{"no":68}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"yes":7}},"Function spacing after":{"values":{"1":6}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":{"0":54,"newline":23}},"Spacing after object operator":{"values":[77]},"Adjacent assignments aligned":{"values":{"no":7,"yes":1}},"CamelCase method name":{"values":{"yes":6}},"Function opening brace placement":{"values":{"new line":6}},"PHP type case":{"values":{"lower":4}},"Spacing after cast statement":{"values":{"1":1}},"Spacing before string concat":{"values":{"1":1}},"Spacing after string concat":{"values":{"1":1}},"Short array syntax used":{"values":{"yes":6}},"Array end comma":{"values":{"no":6}},"Spaces after control structure open parenthesis":{"values":[5]},"Spaces before control structure close parenthesis":{"values":[5]},"Blank lines at start of control structure":{"values":[5]},"Blank lines at end of control structure":{"values":[5]},"Control structure defined inline":{"values":{"no":5}},"PHP constant case":{"values":{"lower":3}},"Inline comment style":{"values":{"\/\/ ...":1}},"Function spacing after last":{"values":[1]}},"errorCount":96,"warningCount":0,"fixableCount":68,"numTokens":1428},"\/Users\/akihito\/git\/Ray.Aop\/src\/Compiler.php":{"hash":"6bd9bd3f26e3a00fed977bfdaf66577a33188","errors":{"7":{"26":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"8":{"1":[{"message":"The class-based use imports must follow the namespace declaration in the file header","source":"PSR12.Files.FileHeader.IncorrectOrder","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is PhpParser\\BuilderFactory.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"33":{"15":[{"message":"Function is_writable() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"9":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"64":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"105":{"27":[{"message":"Function array_keys() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"108":{"17":[{"message":"Function method_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"13":[{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"123":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function file_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"29":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"51":{"8":[{"message":"Class \\Doctrine\\Common\\Annotations\\AnnotationException should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Comment missing for @throws tag in function comment","source":"Squiz.Commenting.FunctionComment.EmptyThrows","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"13":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Compiler::$classDir with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"16":{"12":[{"message":"Property \\Ray\\Aop\\Compiler::$classDir does not have native type hint for its value but it should be possible to add it based on @var annotation \"string\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"18":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Compiler::$codeGen with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"21":{"13":[{"message":"Property \\Ray\\Aop\\Compiler::$codeGen does not have native type hint for its value but it should be possible to add it based on @var annotation \"CodeGenInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"codeGen\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"23":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\Compiler::$aopClassName with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"26":{"13":[{"message":"Property \\Ray\\Aop\\Compiler::$aopClassName does not have native type hint for its value but it should be possible to add it based on @var annotation \"AopClassName\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"aopClassName\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"28":{"5":[{"message":"Doc comment for parameter \"$classDir\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"35":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"36":{"25":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"38":{"24":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"39":{"14":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"40":{"13":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"45":{"12":[{"message":"Method \\Ray\\Aop\\Compiler::__sleep() does not have return type hint nor @return annotation for its return value.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":5,"fixable":false},{"message":"Missing doc comment for function __sleep()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"53":{"12":[{"message":"Method \\Ray\\Aop\\Compiler::__wakeup() does not have void return type hint.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSniff","severity":0,"fixable":true}]},"52":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"60":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"58":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$args\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"66":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"73":{"5":[{"message":"Useless documentation comment with @inheritDoc.","source":"SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\UselessInheritDocCommentSniff","severity":0,"fixable":true},{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"76":{"65":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"67":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"75":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"80":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"78":{"9":[{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"84":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"82":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"93":{"71":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"73":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"92":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"91":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"90":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"103":{"73":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"75":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"102":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"101":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"100":{"5":[{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"106":{"20":[{"message":"Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"107":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"119":{"108":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"110":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"\\ReflectionClass<object>\"; found \"string\" for $sourceClass","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"118":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"117":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $sourceClass does not match actual variable name $aopClassName","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"116":{"5":[{"message":"Doc comment for parameter \"$aopClassName\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$bind\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":107,"81-120":2}},"Line indent":{"values":{"spaces":100}},"PHP keyword case":{"values":{"lower":51}},"Multiple statements on same line":{"values":{"no":35}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"PHP type case":{"values":{"lower":6}},"Function opening brace placement":{"values":{"new line":8}},"Function has doc comment":{"values":{"yes":7,"no":1}},"Function spacing after":{"values":{"1":7}},"Function spacing before":{"values":{"1":1}},"Spaces after control structure open parenthesis":{"values":[6]},"Spaces before control structure close parenthesis":{"values":[6]},"Blank lines at start of control structure":{"values":[6]},"Blank lines at end of control structure":{"values":[6]},"Control structure defined inline":{"values":{"no":6}},"Spacing before object operator":{"values":[23]},"Spacing after object operator":{"values":[23]},"Adjacent assignments aligned":{"values":{"no":2,"yes":1}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"CamelCase method name":{"values":{"yes":5}},"PHP constant case":{"values":{"lower":3}},"Function spacing after last":{"values":[1]},"Inline comment style":{"values":{"\/\/ ...":1}}},"errorCount":70,"warningCount":0,"fixableCount":42,"numTokens":865},"\/Users\/akihito\/git\/Ray.Aop\/src\/MethodMatch.php":{"hash":"097f5b375834b09a40236375548d662133188","errors":{"85":{"32":[{"message":"Function get_class() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"86":{"17":[{"message":"Function array_key_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"13":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"13":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\MethodMatch::$reader with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"16":{"13":[{"message":"Property \\Ray\\Aop\\MethodMatch::$reader does not have native type hint for its value but it should be possible to add it based on @var annotation \"AnnotationReader\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"reader\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"18":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\MethodMatch::$bind with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"21":{"13":[{"message":"Property \\Ray\\Aop\\MethodMatch::$bind does not have native type hint for its value but it should be possible to add it based on @var annotation \"BindInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"bind\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"23":{"12":[{"message":"Missing doc comment for function __construct()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"25":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"26":{"25":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"33":{"98":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"100":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected type hint \"array\"; found \"ReflectionMethod\" for $pointcuts","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"30":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"31":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $pointcuts does not match actual variable name $method","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"29":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"43":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"38":{"9":[{"message":"Expected 1 lines before \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"foreach\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"39":{"13":[{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"55":{"117":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"119":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"54":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"53":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"52":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter \"$pointCut\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"60":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"58":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"64":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"62":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"82":{"7":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"9":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"71":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $pointcuts does not match actual variable name $method","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"73":{"8":[{"message":"Missing parameter comment","source":"Squiz.Commenting.FunctionComment.MissingParamComment","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Doc comment for parameter $annotations does not match actual variable name $pointcuts","source":"Squiz.Commenting.FunctionComment.ParamNameNoMatch","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"77":{"13":[{"message":"Expected type hint \"ReflectionClass<object>\"; found \"ReflectionClass\" for $class","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false},{"message":"Expected type hint \"array\"; found \"ReflectionMethod\" for $pointcuts","source":"Squiz.Commenting.FunctionComment.IncorrectTypeHint","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"70":{"5":[{"message":"Doc comment for parameter \"$method\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":{"55":{"119":[{"message":"Line exceeds 120 characters; contains 122 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":77,"81-120":5,"121-150":1}},"Line indent":{"values":{"spaces":74}},"PHP keyword case":{"values":{"lower":34}},"Multiple statements on same line":{"values":{"no":24}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"Function opening brace placement":{"values":{"new line":3}},"Function has doc comment":{"values":{"no":1,"yes":3}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[20]},"Spacing after object operator":{"values":[20]},"Adjacent assignments aligned":{"values":{"no":1}},"PHP type case":{"values":{"lower":3}},"Inline comment style":{"values":{"\/\/ ...":3}},"Spaces after control structure open parenthesis":{"values":[7]},"Spaces before control structure close parenthesis":{"values":[7]},"Blank lines at start of control structure":{"values":[7]},"Blank lines at end of control structure":{"values":[7]},"Control structure defined inline":{"values":{"no":7}},"CamelCase method name":{"values":{"yes":2}},"Function spacing after last":{"values":[1]}},"errorCount":49,"warningCount":1,"fixableCount":26,"numTokens":653},"\/Users\/akihito\/git\/Ray.Aop\/tests\/BindTest.php":{"hash":"bd9a7f9cd7d6ed24f4f1df3ab773e21233188","errors":{"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\BindTest::$bind with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"15":[{"message":"Property \\Ray\\Aop\\BindTest::$bind does not have native type hint for its value but it should be possible to add it based on @var annotation \"Bind\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"19":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\BindTest::$interceptors with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"22":{"15":[{"message":"Property \\Ray\\Aop\\BindTest::$interceptors does not have native type hint for its value but it should be possible to add it based on @var annotation \"array<MethodInterceptor>\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true}]},"24":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"27":{"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"30":{"44":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"46":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testBindInterceptors()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"32":{"25":[{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}],"26":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"53":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"37":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testBind()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"40":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"35":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"69":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"39":{"26":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"46":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testBindUnmatched()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"35":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"69":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"48":{"26":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"54":{"36":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"38":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testToString()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"56":{"22":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"60":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"35":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"69":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"59":{"26":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"67":{"37":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"39":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMyMatcher()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"70":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"34":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"52":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"69":{"26":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"76":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNotClassMatch()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"78":{"59":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"81":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"83":{"43":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"45":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testOnionAnnotation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"85":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"86":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"87":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"88":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"89":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"90":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"91":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"95":{"54":[{"message":"Multi-line arrays must have a trailing comma after the last element.","source":"SlevomatCodingStandard.Arrays.TrailingArrayComma.MissingTrailingComma","listener":"SlevomatCodingStandard\\Sniffs\\Arrays\\TrailingArrayCommaSniff","severity":5,"fixable":true}],"13":[{"message":"Array key not aligned correctly; expected 19 spaces but found 12","source":"Squiz.Arrays.ArrayDeclaration.KeyNotAligned","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}],"28":[{"message":"Each line in an array declaration must end in a comma","source":"Squiz.Arrays.ArrayDeclaration.NoComma","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true},{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"96":{"9":[{"message":"Closing parenthesis not aligned correctly; expected 18 space(s) but found 8","source":"Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"100":{"62":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"64":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testOnionAnnotationAndPriorityPointcut()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"102":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"103":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"104":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"105":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"106":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"107":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"108":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"109":{"36":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"58":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"110":{"44":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"95":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"114":{"63":[{"message":"Multi-line arrays must have a trailing comma after the last element.","source":"SlevomatCodingStandard.Arrays.TrailingArrayComma.MissingTrailingComma","listener":"SlevomatCodingStandard\\Sniffs\\Arrays\\TrailingArrayCommaSniff","severity":5,"fixable":true}],"13":[{"message":"Array key not aligned correctly; expected 19 spaces but found 12","source":"Squiz.Arrays.ArrayDeclaration.KeyNotAligned","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}],"28":[{"message":"Each line in an array declaration must end in a comma","source":"Squiz.Arrays.ArrayDeclaration.NoComma","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true},{"message":"Array with multiple values cannot be declared on a single line","source":"Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]},"115":{"9":[{"message":"Closing parenthesis not aligned correctly; expected 18 space(s) but found 8","source":"Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Arrays\\ArrayDeclarationSniff","severity":0,"fixable":true}]}},"warnings":{"110":{"126":[{"message":"Line exceeds 120 characters; contains 126 characters","source":"Generic.Files.LineLength.TooLong","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Files\\LineLengthSniff","severity":5,"fixable":false}]}},"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":84,"81-120":18,"121-150":1}},"Line indent":{"values":{"spaces":93}},"PHP keyword case":{"values":{"lower":87}},"Multiple statements on same line":{"values":{"no":62}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":9}},"PHP type case":{"values":{"lower":9}},"Function opening brace placement":{"values":{"new line":9}},"Function has doc comment":{"values":{"no":9}},"Function spacing after":{"values":{"1":8}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[91]},"Spacing after object operator":{"values":[91]},"Short array syntax used":{"values":{"yes":27}},"Array end comma":{"values":{"no":27}},"Adjacent assignments aligned":{"values":{"no":6,"yes":2}},"PHP constant case":{"values":{"lower":1}},"Function spacing after last":{"values":[1]}},"errorCount":96,"warningCount":1,"fixableCount":87,"numTokens":1447},"\/Users\/akihito\/git\/Ray.Aop\/tests\/NullInterceptorTest.php":{"hash":"70b4b371f8a3f5a4af6caf26a97091df33188","errors":{"11":{"34":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"36":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testInvoke()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"14":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":12,"81-120":1}},"Line indent":{"values":{"spaces":6}},"PHP keyword case":{"values":{"lower":10}},"Multiple statements on same line":{"values":{"no":6}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":1}},"PHP type case":{"values":{"lower":1}},"Function opening brace placement":{"values":{"new line":1}},"Function has doc comment":{"values":{"no":1}},"Function spacing after last":{"values":[1]},"Function spacing before first":{"values":[1]},"Adjacent assignments aligned":{"values":{"no":1}},"Short array syntax used":{"values":{"yes":1}},"Array end comma":{"values":{"no":1}},"Spacing before object operator":{"values":[2]},"Spacing after object operator":{"values":[2]}},"errorCount":4,"warningCount":0,"fixableCount":3,"numTokens":116},"\/Users\/akihito\/git\/Ray.Aop\/tests\/CompilerTest.php":{"hash":"8c027006afe5d9ac4d9f40be753e6ec833188","errors":{"8":{"25":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}]},"9":{"31":[{"message":"Header blocks must be separated by a single blank line","source":"PSR12.Files.FileHeader.SpacingAfterBlock","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":true}],"1":[{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"10":{"1":[{"message":"Similar statements must be grouped together inside header blocks; the first \"use\" statement was found on line 7","source":"PSR12.Files.FileHeader.IncorrectGrouping","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Files\\FileHeaderSniff","severity":5,"fixable":false},{"message":"Use statements should be sorted alphabetically. The first wrong one is LogicException.","source":"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\AlphabeticallySortedUsesSniff","severity":5,"fixable":true},{"message":"Expected 1 lines between different types of use statement, found 0.","source":"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenDifferentTypeOfUse","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\UseSpacingSniff","severity":5,"fixable":true}]},"44":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"53":{"27":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"55":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"77":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"169":{"21":[{"message":"Function unserialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"33":[{"message":"Function serialize() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"171":{"27":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"177":{"9":[{"message":"Function passthru() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"207":{"9":[{"message":"Function assert() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}],"16":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"228":{"27":[{"message":"Function class_exists() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"242":{"23":[{"message":"Function array_shift() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"255":{"23":[{"message":"Function array_shift() should not be referenced via a fallback global name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true}]},"118":{"13":[{"message":"Class \\Ray\\Aop\\FakeMock should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"129":{"13":[{"message":"Class \\Ray\\Aop\\FakeMock should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"235":{"13":[{"message":"Class \\Ray\\Aop\\FakeAnnotateClass should not be referenced via a fully qualified name, but via a use statement.","source":"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName","listener":"SlevomatCodingStandard\\Sniffs\\Namespaces\\ReferenceUsedNamesOnlySniff","severity":5,"fixable":true},{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"21":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CompilerTest::$bind with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"24":{"13":[{"message":"Property \\Ray\\Aop\\CompilerTest::$bind does not have native type hint for its value but it should be possible to add it based on @var annotation \"BindInterface\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"bind\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"26":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\CompilerTest::$compiler with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"29":{"13":[{"message":"Property \\Ray\\Aop\\CompilerTest::$compiler does not have native type hint for its value but it should be possible to add it based on @var annotation \"Compiler\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"compiler\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"31":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"35":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"36":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"84":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"37":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"24":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"40":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNewInstance()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"49":{"44":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"46":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNewInstanceTwice()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"64":{"56":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"58":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"63":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"61":{"5":[{"message":"Doc comment for parameter \"$class\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"67":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Use early exit to reduce code nesting.","source":"SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\EarlyExitSniff","severity":5,"fixable":true}]},"75":{"60":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"62":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"74":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"72":{"5":[{"message":"Doc comment for parameter \"$weaved\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"79":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 11 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"83":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testParenteClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"87":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true}]},"97":{"66":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"68":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"96":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"94":{"5":[{"message":"Doc comment for parameter \"$weaved\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"108":{"61":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"63":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"107":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"105":{"5":[{"message":"Doc comment for parameter \"$weaved\" missing","source":"Squiz.Commenting.FunctionComment.MissingParamTag","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"110":{"14":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"16":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"112":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"116":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testGetPrivateVal()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"120":{"14":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"124":{"60":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"62":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testCallAbortProceedInterceptorTwice()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"126":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"127":{"84":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"135":{"43":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"45":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testClassDocComment()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"138":{"9":[{"message":"Invalid comment type \/* *\/ for inline documentation comment, use \/** *\/.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidCommentType","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true},{"message":"Invalid inline documentation comment format \"@var $weaved FakeMock\", expected \"@var FakeMock $weaved\".","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidFormat","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true}]},"140":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"145":{"44":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"46":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMethodDocComment()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"148":{"9":[{"message":"Invalid comment type \/* *\/ for inline documentation comment, use \/** *\/.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidCommentType","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true},{"message":"Invalid inline documentation comment format \"@var $weaved FakeMock\", expected \"@var FakeMock $weaved\".","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidFormat","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true}]},"150":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 3 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"156":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNoDocComment()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"159":{"9":[{"message":"Invalid comment type \/* *\/ for inline documentation comment, use \/** *\/.","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidCommentType","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true},{"message":"Invalid inline documentation comment format \"@var $weaved FakeMock\", expected \"@var FakeMock $weaved\".","source":"SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidFormat","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\InlineDocCommentDeclarationSniff","severity":5,"fixable":true}]},"160":{"26":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"167":{"37":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"39":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testSerialize()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"170":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"174":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testIncludeCompilerFile()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"179":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"184":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testCompileNoBInd()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"186":{"60":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"190":{"38":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"40":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testAnnotation()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"192":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"193":{"25":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"197":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNoNamespace()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"199":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"200":{"25":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"204":{"54":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"56":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testArrayTypehintedAndCallable()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"208":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"213":{"39":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"41":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testNotWritable()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"220":{"36":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"38":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testHasBound()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"223":{"21":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"23":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"224":{"18":[{"message":"Equals sign not aligned with surrounding assignments; expected 8 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"20":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"225":{"19":[{"message":"Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"84":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"231":{"50":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"52":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMethodAnnotationReader()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"233":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"60":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"249":{"49":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"51":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}]},"248":{"6":[{"message":"Missing @return tag in function comment","source":"Squiz.Commenting.FunctionComment.MissingReturn","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"251":{"26":[{"message":"Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"259":{"60":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"62":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMethodAnnotationReaderReturnNull()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"261":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}],"61":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"263":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"266":{"9":[{"message":"No blank line found after control structure","source":"Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\WhiteSpace\\ControlStructureSpacingSniff","severity":0,"fixable":true}]},"264":{"9":[{"message":"Expected 1 lines before \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":0,"fixable":true},{"message":"Expected 1 lines after \"if\", found 0.","source":"SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountAfterControlStructure","listener":"SlevomatCodingStandard\\Sniffs\\ControlStructures\\BlockControlStructureSpacingSniff","severity":5,"fixable":true}]},"265":{"19":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"272":{"56":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"58":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testInterceptorCanChangeArgument()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"274":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"276":{"13":[{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"282":{"45":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"47":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testUnnamespacedClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"284":{"13":[{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"290":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testVoidFunction()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"292":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]},"294":{"13":[{"message":"Use assertion instead of inline documentation comment.","source":"SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion","listener":"SlevomatCodingStandard\\Sniffs\\PHP\\RequireExplicitAssertionSniff","severity":5,"fixable":true}]},"300":{"47":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"49":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testCompileMultipleFile()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"304":{"15":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}],"18":[{"message":"Parentheses must be used when instantiating a new class","source":"PSR12.Classes.ClassInstantiation.MissingParentheses","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Classes\\ClassInstantiationSniff","severity":5,"fixable":true}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":239,"81-120":30}},"Line indent":{"values":{"spaces":252}},"PHP keyword case":{"values":{"lower":134}},"Multiple statements on same line":{"values":{"no":143}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":28}},"PHP type case":{"values":{"lower":32}},"Function opening brace placement":{"values":{"new line":28}},"Function has doc comment":{"values":{"no":23,"yes":5}},"Function spacing after":{"values":{"1":27}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[192]},"Spacing after object operator":{"values":[192]},"Adjacent assignments aligned":{"values":{"no":20,"yes":3}},"Spacing before string concat":{"values":{"1":10}},"Spacing after string concat":{"values":{"1":10}},"Short array syntax used":{"values":{"yes":23}},"Array end comma":{"values":{"no":23}},"Spaces after control structure open parenthesis":{"values":[3]},"Spaces before control structure close parenthesis":{"values":[3]},"Blank lines at start of control structure":{"values":[3]},"Blank lines at end of control structure":{"values":[3]},"Control structure defined inline":{"values":{"no":3}},"Inline comment style":{"values":{"\/* ... *\/":3,"\/\/ ...":2}},"Spacing after cast statement":{"values":{"1":6}},"Function spacing after last":{"values":[1]}},"errorCount":181,"warningCount":0,"fixableCount":146,"numTokens":3004},"\/Users\/akihito\/git\/Ray.Aop\/tests\/BuiltInMatcherTest.php":{"hash":"74fa3506424579f94bde223e332c677a33188","errors":{"14":{"5":[{"message":"Found multi-line comment for property \\Ray\\Aop\\BuiltInMatcherTest::$matcher with single line content, use one-line comment instead.","source":"SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment","listener":"SlevomatCodingStandard\\Sniffs\\Commenting\\RequireOneLinePropertyDocCommentSniff","severity":5,"fixable":true}]},"17":{"13":[{"message":"Property \\Ray\\Aop\\BuiltInMatcherTest::$matcher does not have native type hint for its value but it should be possible to add it based on @var annotation \"BuiltinMatcher\".","source":"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\PropertyTypeHintSniff","severity":0,"fixable":true},{"message":"Private member variable \"matcher\" must contain a leading underscore","source":"Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\NamingConventions\\ValidVariableNameSniff","severity":0,"fixable":false}]},"19":{"32":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"34":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"15":[{"message":"Missing doc comment for function setUp()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"24":{"40":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"42":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesClass()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"26":{"16":[{"message":"Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"31":{"41":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"43":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testMatchesMethod()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]},"33":{"17":[{"message":"Equals sign not aligned with surrounding assignments; expected 4 spaces but found 1 space","source":"Generic.Formatting.MultipleStatementAlignment.NotSame","listener":"PHP_CodeSniffer\\Standards\\Generic\\Sniffs\\Formatting\\MultipleStatementAlignmentSniff","severity":0,"fixable":true}]},"38":{"49":[{"message":"There must not be a space before the colon in a return type declaration","source":"PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon","listener":"PHP_CodeSniffer\\Standards\\PSR12\\Sniffs\\Functions\\ReturnTypeDeclarationSniff","severity":5,"fixable":true}],"51":[{"message":"There must be no whitespace between closing parenthesis and return type colon.","source":"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing.WhitespaceBeforeColon","listener":"SlevomatCodingStandard\\Sniffs\\TypeHints\\ReturnTypeHintSpacingSniff","severity":5,"fixable":true}],"12":[{"message":"Missing doc comment for function testInvalidBuiltinMatcher()","source":"Squiz.Commenting.FunctionComment.Missing","listener":"PHP_CodeSniffer\\Standards\\Squiz\\Sniffs\\Commenting\\FunctionCommentSniff","severity":0,"fixable":false}]}},"warnings":[],"metrics":{"Declarations and side effects mixed":{"values":{"no":1}},"PHP short open tag used":{"values":{"no":1}},"EOL char":{"values":{"\\n":1}},"Number of newlines at EOF":{"values":{"1":1}},"PHP closing tag at end of PHP-only file":{"values":{"no":1}},"Line length":{"values":{"80 or less":35}},"Line indent":{"values":{"spaces":25}},"PHP keyword case":{"values":{"lower":21}},"Multiple statements on same line":{"values":{"no":16}},"One class per file":{"values":{"yes":1}},"Class defined in namespace":{"values":{"yes":1}},"PascalCase class name":{"values":{"yes":1}},"Class opening brace placement":{"values":{"new line":1}},"CamelCase method name":{"values":{"yes":4}},"PHP type case":{"values":{"lower":4}},"Function opening brace placement":{"values":{"new line":4}},"Function has doc comment":{"values":{"no":4}},"Function spacing after":{"values":{"1":3}},"Function spacing before":{"values":{"1":1}},"Spacing before object operator":{"values":[11]},"Spacing after object operator":{"values":[11]},"Short array syntax used":{"values":{"yes":4}},"Array end comma":{"values":{"no":4}},"Adjacent assignments aligned":{"values":{"no":2}},"Function spacing after last":{"values":[1]}},"errorCount":17,"warningCount":0,"fixableCount":12,"numTokens":296}}